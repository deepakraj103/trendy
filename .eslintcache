[{"C:\\trendyy\\src\\index.js":"1","C:\\trendyy\\src\\reportWebVitals.js":"2","C:\\trendyy\\src\\store\\store.js":"3","C:\\trendyy\\src\\context\\ThemeContext.js":"4","C:\\trendyy\\src\\App.js":"5","C:\\trendyy\\src\\store\\reducers\\AuthReducer.js":"6","C:\\trendyy\\src\\store\\reducers\\PostsReducer.js":"7","C:\\trendyy\\src\\store\\reducers\\Reducers.js":"8","C:\\trendyy\\src\\store\\selectors\\AuthSelectors.js":"9","C:\\trendyy\\src\\services\\AuthService.js":"10","C:\\trendyy\\src\\jsx\\pages\\Registration.js":"11","C:\\trendyy\\src\\jsx\\pages\\ForgotPassword.js":"12","C:\\trendyy\\src\\jsx\\pages\\Login.js":"13","C:\\trendyy\\src\\jsx\\index.jsx":"14","C:\\trendyy\\src\\store\\actions\\PostTypes.js":"15","C:\\trendyy\\src\\store\\actions\\AuthActions.js":"16","C:\\trendyy\\src\\jsx\\components\\web-player\\index.jsx":"17","C:\\trendyy\\src\\jsx\\layouts\\Footer.js":"18","C:\\trendyy\\src\\jsx\\layouts\\ScrollToTop.js":"19","C:\\trendyy\\src\\jsx\\components\\screen\\details.jsx":"20","C:\\trendyy\\src\\utils\\api.js":"21","C:\\trendyy\\src\\jsx\\layouts\\nav\\index.js":"22","C:\\trendyy\\src\\jsx\\components\\screen\\index.jsx":"23","C:\\trendyy\\src\\jsx\\components\\media\\index.jsx":"24","C:\\trendyy\\src\\jsx\\components\\settings\\index.jsx":"25","C:\\trendyy\\src\\jsx\\components\\web-player\\main.jsx":"26","C:\\trendyy\\src\\utils\\fetchClient.js":"27","C:\\trendyy\\src\\jsx\\modals\\UpdateModal.jsx":"28","C:\\trendyy\\src\\jsx\\modals\\WindowsModal.jsx":"29","C:\\trendyy\\src\\jsx\\modals\\QuickPlayModal.jsx":"30","C:\\trendyy\\src\\jsx\\layouts\\ChatBox.js":"31","C:\\trendyy\\src\\jsx\\layouts\\nav\\Header.js":"32","C:\\trendyy\\src\\jsx\\layouts\\nav\\NavHader.js":"33","C:\\trendyy\\src\\jsx\\modals\\FilterModal.jsx":"34","C:\\trendyy\\src\\jsx\\components\\screen\\listScreens.jsx":"35","C:\\trendyy\\src\\jsx\\modals\\AddScreenModal.jsx":"36","C:\\trendyy\\src\\jsx\\components\\settings\\defaultComposition.jsx":"37","C:\\trendyy\\src\\jsx\\modals\\UploadMediaFileModal.jsx":"38","C:\\trendyy\\src\\jsx\\components\\media\\listMedia.jsx":"39","C:\\trendyy\\src\\jsx\\layouts\\nav\\SideBar.js":"40","C:\\trendyy\\src\\jsx\\components\\web-player\\WebVideoPlayer.jsx":"41","C:\\trendyy\\src\\jsx\\layouts\\nav\\Logout.js":"42","C:\\trendyy\\src\\jsx\\components\\chatBox\\Alerts.js":"43","C:\\trendyy\\src\\jsx\\components\\chatBox\\Chat.js":"44","C:\\trendyy\\src\\jsx\\components\\chatBox\\Notes.js":"45","C:\\trendyy\\src\\utils\\UtilsService.js":"46","C:\\trendyy\\src\\jsx\\components\\screen\\tagInputField.jsx":"47","C:\\trendyy\\src\\jsx\\components\\media\\fileUploadWithPreview.jsx":"48","C:\\trendyy\\src\\jsx\\modals\\PublishMediaModal.jsx":"49","C:\\trendyy\\src\\jsx\\modals\\DeleteConfirmation.jsx":"50","C:\\trendyy\\src\\jsx\\components\\chatBox\\MsgBox.js":"51","C:\\trendyy\\src\\jsx\\modals\\AddNewTagModal.jsx":"52","C:\\trendyy\\src\\jsx\\components\\TableLoader.jsx":"53","C:\\trendyy\\src\\jsx\\components\\layout\\Layout.jsx":"54","C:\\trendyy\\src\\jsx\\components\\layout\\ChooseLayout.jsx":"55","C:\\trendyy\\src\\jsx\\components\\layout\\CreateComposition.jsx":"56","C:\\trendyy\\src\\jsx\\components\\layout\\CompositionTable.jsx":"57","C:\\trendyy\\src\\jsx\\components\\layout\\ZoneInfoTable.jsx":"58","C:\\trendyy\\src\\jsx\\components\\push\\PushScreen.jsx":"59","C:\\trendyy\\src\\jsx\\components\\push\\SelectComparison.jsx":"60"},{"size":875,"mtime":1680618689673,"results":"61","hashOfConfig":"62"},{"size":375,"mtime":1680618689715,"results":"63","hashOfConfig":"62"},{"size":753,"mtime":1680618747644,"results":"64","hashOfConfig":"62"},{"size":1906,"mtime":1680618689759,"results":"65","hashOfConfig":"62"},{"size":3329,"mtime":1682953471368,"results":"66","hashOfConfig":"62"},{"size":1799,"mtime":1680618747852,"results":"67","hashOfConfig":"62"},{"size":1666,"mtime":1680618747916,"results":"68","hashOfConfig":"62"},{"size":1054,"mtime":1680618747949,"results":"69","hashOfConfig":"62"},{"size":122,"mtime":1682234657311,"results":"70","hashOfConfig":"62"},{"size":2508,"mtime":1682234657308,"results":"71","hashOfConfig":"62"},{"size":5838,"mtime":1680618741055,"results":"72","hashOfConfig":"62"},{"size":2091,"mtime":1680618740863,"results":"73","hashOfConfig":"62"},{"size":7446,"mtime":1680692464797,"results":"74","hashOfConfig":"62"},{"size":3145,"mtime":1682955412036,"results":"75","hashOfConfig":"62"},{"size":503,"mtime":1680618747817,"results":"76","hashOfConfig":"62"},{"size":2659,"mtime":1682234657310,"results":"77","hashOfConfig":"62"},{"size":1060,"mtime":1682746764775,"results":"78","hashOfConfig":"62"},{"size":431,"mtime":1680769429507,"results":"79","hashOfConfig":"62"},{"size":256,"mtime":1680618740460,"results":"80","hashOfConfig":"62"},{"size":15795,"mtime":1682746764773,"results":"81","hashOfConfig":"62"},{"size":2098,"mtime":1682234657313,"results":"82","hashOfConfig":"62"},{"size":983,"mtime":1680618740520,"results":"83","hashOfConfig":"62"},{"size":2397,"mtime":1682234657286,"results":"84","hashOfConfig":"62"},{"size":4287,"mtime":1682303608920,"results":"85","hashOfConfig":"62"},{"size":935,"mtime":1682234657289,"results":"86","hashOfConfig":"62"},{"size":6068,"mtime":1682746764776,"results":"87","hashOfConfig":"62"},{"size":810,"mtime":1682234657314,"results":"88","hashOfConfig":"62"},{"size":2751,"mtime":1682308222237,"results":"89","hashOfConfig":"62"},{"size":1008,"mtime":1682306995505,"results":"90","hashOfConfig":"62"},{"size":6459,"mtime":1682306394344,"results":"91","hashOfConfig":"62"},{"size":2328,"mtime":1680618740337,"results":"92","hashOfConfig":"62"},{"size":3776,"mtime":1680768425683,"results":"93","hashOfConfig":"62"},{"size":863,"mtime":1680773529069,"results":"94","hashOfConfig":"62"},{"size":3413,"mtime":1680931866648,"results":"95","hashOfConfig":"62"},{"size":8547,"mtime":1682234657287,"results":"96","hashOfConfig":"62"},{"size":10301,"mtime":1682234657303,"results":"97","hashOfConfig":"62"},{"size":1438,"mtime":1682234657288,"results":"98","hashOfConfig":"62"},{"size":2822,"mtime":1682234657305,"results":"99","hashOfConfig":"62"},{"size":8207,"mtime":1682234657284,"results":"100","hashOfConfig":"62"},{"size":5159,"mtime":1682748757856,"results":"101","hashOfConfig":"62"},{"size":912,"mtime":1682746764775,"results":"102","hashOfConfig":"62"},{"size":1250,"mtime":1682234657297,"results":"103","hashOfConfig":"62"},{"size":5894,"mtime":1680618740162,"results":"104","hashOfConfig":"62"},{"size":12953,"mtime":1680618740195,"results":"105","hashOfConfig":"62"},{"size":5948,"mtime":1680618740256,"results":"106","hashOfConfig":"62"},{"size":3792,"mtime":1682234657312,"results":"107","hashOfConfig":"62"},{"size":1756,"mtime":1682234657288,"results":"108","hashOfConfig":"62"},{"size":1782,"mtime":1682234657283,"results":"109","hashOfConfig":"62"},{"size":6522,"mtime":1682234657304,"results":"110","hashOfConfig":"62"},{"size":804,"mtime":1682234657304,"results":"111","hashOfConfig":"62"},{"size":12988,"mtime":1680618740229,"results":"112","hashOfConfig":"62"},{"size":2455,"mtime":1682234657301,"results":"113","hashOfConfig":"62"},{"size":330,"mtime":1682234657279,"results":"114","hashOfConfig":"62"},{"size":1874,"mtime":1682749387581,"results":"115","hashOfConfig":"62"},{"size":3377,"mtime":1682754175014,"results":"116","hashOfConfig":"62"},{"size":2677,"mtime":1682758042822,"results":"117","hashOfConfig":"62"},{"size":2406,"mtime":1682758186656,"results":"118","hashOfConfig":"62"},{"size":2030,"mtime":1682758139156,"results":"119","hashOfConfig":"62"},{"size":2537,"mtime":1682955431461,"results":"120","hashOfConfig":"62"},{"size":4681,"mtime":1682956442222,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"p3jfrc",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"124"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"124"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"124"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"124"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"124"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"124"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"124"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"124"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"124"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"124"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"124"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"124"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"124"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"124"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"124"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"124"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\trendyy\\src\\index.js",[],["259","260"],"C:\\trendyy\\src\\reportWebVitals.js",[],"C:\\trendyy\\src\\store\\store.js",[],"C:\\trendyy\\src\\context\\ThemeContext.js",[],"C:\\trendyy\\src\\App.js",["261","262","263"],"C:\\trendyy\\src\\store\\reducers\\AuthReducer.js",[],"C:\\trendyy\\src\\store\\reducers\\PostsReducer.js",[],"C:\\trendyy\\src\\store\\reducers\\Reducers.js",[],"C:\\trendyy\\src\\store\\selectors\\AuthSelectors.js",[],"C:\\trendyy\\src\\services\\AuthService.js",[],"C:\\trendyy\\src\\jsx\\pages\\Registration.js",[],"C:\\trendyy\\src\\jsx\\pages\\ForgotPassword.js",[],"C:\\trendyy\\src\\jsx\\pages\\Login.js",["264","265","266"],"import React, { useState } from 'react'\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { loadingToggleAction,loginAction,\r\n} from '../../store/actions/AuthActions';\r\nimport { Row, Col, Card,  Tab, Nav, Button } from 'react-bootstrap'\r\n//\r\nimport logo from '../../img/logo.png'\r\nimport eyeOff from '../../img/eye-off.svg'\r\nimport googleIcon from '../../img/google-icon.png'\r\n\r\nfunction Login (props) {\r\n    const [email, setEmail] = useState('demo@example.com');\r\n    let errorsObj = { email: '', password: '' };\r\n    const [errors, setErrors] = useState(errorsObj);\r\n    const [password, setPassword] = useState('123456');\r\n    const dispatch = useDispatch();\r\n\r\n    function onLogin(e) {\r\n        e.preventDefault();\r\n        let error = false;\r\n        const errorObj = { ...errorsObj };\r\n        if (email === '') {\r\n            errorObj.email = 'Email is Required';\r\n            error = true;\r\n        }\r\n        if (password === '') {\r\n            errorObj.password = 'Password is Required';\r\n            error = true;\r\n        }\r\n        setErrors(errorObj);\r\n        if (error) {\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tdispatch(loadingToggleAction(true));\t\r\n        dispatch(loginAction(email, password, props.history));\r\n    }\r\n\r\n\r\n\tconst tabData = [\r\n\t\t{\r\n\t\t  name: 'Sign in',\r\n\t\t  content:\t<div>\r\n\t\t  <div className=\"mb-4\">\r\n\t\t\t  <h3 className=\"mb-1 font-w600\">Welcome Back</h3>\r\n\t\t\t  <p className=\"welcome-content-paragraph\">Log in with your data that you entered during your registration</p>\r\n\t\t  </div>\r\n\t\t  {props.errorMessage && (\r\n\t\t\t  <div className='bg-red-300 text-red-900 border border-red-900 p-1 my-2'>\r\n\t\t\t\t  {props.errorMessage}\r\n\t\t\t  </div>\r\n\t\t  )}\r\n\t\t  {props.successMessage && (\r\n\t\t\t  <div className='bg-green-300 text-green-900 border border-green-900 p-1 my-2'>\r\n\t\t\t\t  {props.successMessage}\r\n\t\t\t  </div>\r\n\t\t  )}\r\n\t\t  <form onSubmit={onLogin}>\r\n\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t  <input type=\"email\" className=\"form-control\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n\t\t\t\t  {errors.email && <div className=\"text-danger fs-12\">{errors.email}</div>}\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"form-group password-textfield\">\r\n\t\t\t\t  <input type=\"password\" className=\"form-control\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n\t\t\t  <span className='eye-off'><img src={eyeOff} alt=\"\" className=\"eye-off\"/> </span>\r\n\t\t\t\t  {errors.password && <div className=\"text-danger fs-12\">{errors.password}</div>}\r\n\t\t\t  </div>\r\n\t\t\t  <div className='recover-password d-flex justify-content-end'>\r\n\t\t\t\t  <Link  className='revover-password'  to=\"./page-register\">Recover Password ?</Link>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"text-center\">\r\n\t\t\t\t  <button type=\"submit\" className=\"btn btn-primary btn-block btn-pink\">Sign In</button>\r\n\t\t\t  </div>\r\n\t\t  </form>\r\n\t\t  <div className=\"new-account add-new-account  text-center mt-2\">\r\n\t\t\t  <p className=\"mb-0\">Don't have an account?{\" \"}\r\n\t\t\t\t  <Link className=\"signup-link\" to=\"./page-register\">Sign up</Link>\r\n\t\t\t  </p>\r\n\t\t  </div>\r\n\r\n\t\t  <Button className='btn-google-signin' variant='outline-primary'>\r\n\t\t  <img src={googleIcon} alt=\"\" className=\"logo-icon mr-2\"/> <span>Sign in with Google</span>\r\n\t\t  </Button>\r\n\t\t  </div>\r\n\r\n\t\t},\r\n\t\t{\r\n\t\t  name: 'Register',\r\n\t\t  content:<div>\r\n\t\t  <div className=\"mb-4\">\r\n\t\t\t  <h3 className=\"mb-1 font-w600\">Let’s get Started</h3>\r\n\t\t\t  <p className=\"welcome-content-paragraph\">Enter your basic information to create new account on Trendyy</p>\r\n\t\t  </div>\r\n\t\t  {props.errorMessage && (\r\n\t\t\t  <div className='bg-red-300 text-red-900 border border-red-900 p-1 my-2'>\r\n\t\t\t\t  {props.errorMessage}\r\n\t\t\t  </div>\r\n\t\t  )}\r\n\t\t  {props.successMessage && (\r\n\t\t\t  <div className='bg-green-300 text-green-900 border border-green-900 p-1 my-2'>\r\n\t\t\t\t  {props.successMessage}\r\n\t\t\t  </div>\r\n\t\t  )}\r\n\t\t  <form onSubmit={onLogin}>\r\n\t\t  <div className=\"form-group\">\r\n\t\t\t\t  <input type=\"text\" className=\"form-control\" placeholder='Enter Name' value='Enter Name'/>\r\n\t\t\t\t  {/* {errors.email && <div className=\"text-danger fs-12\">{errors.email}</div>} */}\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t  <input type=\"email\" className=\"form-control\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n\t\t\t\t  {errors.email && <div className=\"text-danger fs-12\">{errors.email}</div>}\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t  <input type=\"phone\" className=\"form-control\" placeholder='Phone Number' value='Phone Number'/>\r\n\t\t\t\t  {/* {errors.email && <div className=\"text-danger fs-12\">{errors.email}</div>} */}\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"form-group password-textfield\">\r\n\t\t\t\t  <input type=\"password\" className=\"form-control\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n\t\t\t  <span className='eye-off'><img src={eyeOff} alt=\"\" className=\"eye-off\"/> </span>\r\n\t\t\t\t  {errors.password && <div className=\"text-danger fs-12\">{errors.password}</div>}\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"text-center\">\r\n\t\t\t\t  <button type=\"submit\" className=\"btn btn-primary btn-block btn-pink\">Register</button>\r\n\t\t\t  </div>\r\n\t\t  </form>\r\n\t\t  <div className=\"new-account add-new-account  text-center mt-2\">\r\n\t\t\t  <p className=\"mb-0\">Already have an account?{\" \"}\r\n\t\t\t\t  <Link className=\"signup-link\" to=\"./page-register\">Sign in</Link>\r\n\t\t\t  </p>\r\n\t\t  </div>\r\n\t\t  </div>\r\n\t\t},\r\n\r\n\t\r\n\t  ]\r\n  return (\r\n  \r\n\t\t<div className=\"login-form-bx auth-page\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-lg-8 col-md-7 d-flex box-skew1 relative login-leftpanel\">\r\n\t\t\t\t\t\t<div className=\"inner-content align-self-center\">\r\n\t\t\t\t\t\t\t<Link to=\"/dashboard\" className=\"login-logo\">\r\n\t\t\t\t\t\t\t\t<img src={logo} alt=\"\" className=\"logo-icon mr-2\"/>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t<h2 className=\"m-b10 text-white\">Sign In to <br/> Trendyy Website</h2>\r\n\t\t\t\t\t\t\t<p className=\"m-b40 text-white\">Boost your engagement & productivity, streamline processes, and make faster communications.</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='login-center-img'>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-lg-4 col-md-5 box-skew d-flex pl-0 pr-0 login-rightpanel\">\r\n\t\t\t\t\t\t<div className=\"authincation-content\">\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\r\n                <Nav as='ul' className='nav-pills light'>\r\n\t\t\t\t{tabData.map((data, i) => (\r\n                      <Nav.Item as='li' key={i}>\r\n                        <Nav.Link eventKey={data.name.toLowerCase()}>\r\n                          <i className={`la la-${data.icon} mr-2`} />\r\n                          {data.name}\r\n                        </Nav.Link>\r\n                      </Nav.Item>\r\n                    ))}\r\n                </Nav>\r\n                <Tab.Content className='auth-tab-content'>\r\n\t\t\t\t{tabData.map((data, i) => (\r\n                        <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\r\n\t\t\t\t\t\t\t<div>{data.content}</div>\r\n\t\t\t\t\t\t\r\n                         \r\n                        </Tab.Pane> \r\n                      )\r\n                  )}\r\n                </Tab.Content>\r\n              </Tab.Container>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        errorMessage: state.auth.errorMessage,\r\n        successMessage: state.auth.successMessage,\r\n        showLoading: state.auth.showLoading,\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(Login);","C:\\trendyy\\src\\jsx\\index.jsx",[],"C:\\trendyy\\src\\store\\actions\\PostTypes.js",[],"C:\\trendyy\\src\\store\\actions\\AuthActions.js",[],"C:\\trendyy\\src\\jsx\\components\\web-player\\index.jsx",[],"C:\\trendyy\\src\\jsx\\layouts\\Footer.js",[],"C:\\trendyy\\src\\jsx\\layouts\\ScrollToTop.js",[],"C:\\trendyy\\src\\jsx\\components\\screen\\details.jsx",["267","268","269"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Accordion,\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  Dropdown,\r\n  DropdownButton,\r\n  Badge,\r\n} from \"react-bootstrap\";\r\n\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport assignIcon from \"../../../img/path1299.png\";\r\nimport secndIcon from \"../../../img/Group626051.png\";\r\nimport editIcon from \"../../../img/edit-icon.png\";\r\nimport powerIcon from \"../../../img/power-icon.png\";\r\nimport screenShotIcon from \"../../../img/screenshot-icon.png\";\r\nimport locationIcon from \"../../../img/location-icon.png\";\r\nimport accordionImg from \"../../../img/screen-accordion-img.png\";\r\nimport editComposition from \"../../../img/edit-composition.png\";\r\nimport clockIcon from \"../../../img/clock-icon.png\";\r\nimport tagAddIcon from \"../../../img/icon-tag-add.png\";\r\n\r\nimport { deleteScreen, getAllScreens } from \"../../../utils/api\";\r\nimport DeleteConfirmation from \"../../modals/DeleteConfirmation\";\r\nimport QuickPlayModal from \"../../modals/QuickPlayModal\";\r\nimport WindowsModal from \"../../modals/WindowsModal\";\r\nimport UpdateModal from \"../../modals/UpdateModal\";\r\n\r\nconst ScreenDetails = () => {\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  const [screen, setScreen] = useState(\"\");\r\n  const [activeDefault, setActiveDefault] = useState(\"\");\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [showQuickPlayModal, setQuickPlayModal] = useState(false);\r\n  const [showWindowsModal, setWindowsModal] = useState(false);\r\n  const [showUpdateModal, setUpdateModal] = useState(false);\r\n  // use effect\r\n  useEffect(() => {\r\n    callAllScreenApi();\r\n  }, []);\r\n  const callAllScreenApi = async () => {\r\n    const list = await getAllScreens();\r\n    setScreen(\r\n      list.find((item) => {\r\n        return item._id === id;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    setDeleteModal(false);\r\n    await deleteScreen(id);\r\n    history.push(\"/display\");\r\n  };\r\n\r\n  const handleQuickPlay = async () => {\r\n    setDeleteModal(false);\r\n  };\r\n\r\n  const handleWindows = async () => {\r\n    setWindowsModal(false);\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    setWindowsModal(false);\r\n  };\r\n  const defaultAccordion = [\r\n    {\r\n      title: \"Content\",\r\n      text: (\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4 col-md-4 col-sm-6 col-12\">\r\n            <div className=\"accordion-custom-body d-flex align-items-center w-100\">\r\n              <div className=\"accordion-custom-img\">\r\n                <img\r\n                  className=\"accordion-img\"\r\n                  src={accordionImg}\r\n                  alt=\"menu-icon\"\r\n                />\r\n              </div>\r\n              <div className=\"accordion-custom-content flex-1\">\r\n                <h6>Currently Playing</h6>\r\n                <p>Default Composition</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-4 col-md-4 col-sm-6 col-12\">\r\n            <div className=\"accordion-custom-body d-flex align-items-center w-100\">\r\n              <div className=\"accordion-custom-img\">\r\n                <img\r\n                  className=\"accordion-img\"\r\n                  src={accordionImg}\r\n                  alt=\"menu-icon\"\r\n                />\r\n              </div>\r\n              <div className=\"accordion-custom-content flex-1\">\r\n                <h6>\r\n                  Default Composition{\" \"}\r\n                  <span className=\"edit-compostion\">\r\n                    {\" \"}\r\n                    <img\r\n                      className=\"accordion-img\"\r\n                      src={editComposition}\r\n                      alt=\"menu-icon\"\r\n                    />\r\n                  </span>\r\n                </h6>\r\n                <p>Default Composition 1</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-lg-4 col-md-4 col-sm-6 col-12\">\r\n            <div className=\"accordion-custom-body d-flex align-items-center w-100\">\r\n              <div className=\"schedule-custom-img\">\r\n                <img className=\"schedule-img\" src={clockIcon} alt=\"menu-icon\" />\r\n              </div>\r\n              <div className=\"accordion-custom-content active-schedule flex-1\">\r\n                <h6>Active Schedule</h6>\r\n                <h5>Schedule 1</h5>\r\n                <p className=\"date-schedule\">\r\n                  From 02 Apr, 23 ,04:00PM - To 05 Apr,23, 05:00Pm\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n      bg: \"primary\",\r\n    },\r\n    {\r\n      title: \"Device\",\r\n      text: (\r\n        <div className=\"device-accordion-content\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                  <div className=\"device-content\">\r\n                    <h6>Private IP</h6>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                  <div className=\"device-content\">\r\n                    <p>10.10.1.10</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                  <div className=\"device-content\">\r\n                    <h6>Device OS</h6>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                  <div className=\"device-content\">\r\n                    <p>Windows</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                  <div className=\"device-content\">\r\n                    <h6>Public IP</h6>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                  <div className=\"device-content\">\r\n                    <p>17.12.13.10</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                  <div className=\"device-content\">\r\n                    <h6>APK Version</h6>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                  <div className=\"device-content\">\r\n                    <p>NA</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                  <div className=\"device-content\">\r\n                    <h6>MAC Address</h6>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                  <div className=\"device-content\">\r\n                    <p>NA</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                  <div className=\"device-content\">\r\n                    <h6>SDK Version</h6>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                  <div className=\"device-content\">\r\n                    <p>NA</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                  <div className=\"device-content\">\r\n                    <h6>Device ID</h6>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                  <div className=\"device-content\">\r\n                    <p>509373783ASDH766</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                  <div className=\"device-content\">\r\n                    <h6>Javascript Version</h6>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-lg-6 col-md-6 col-sm-6 col-12\">\r\n                  <div className=\"device-content\">\r\n                    <p>5.3.0.0</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n\r\n      bg: \"info\",\r\n    },\r\n    {\r\n      title: \"Tag\",\r\n      text: (\r\n        <div className=\"tag-accordion-content\">\r\n          <div className=\"tag-content-row d-flex flex-wrap align-items-center\">\r\n            <Badge\r\n              className=\"badge-common-light badge-tag mr-2\"\r\n              variant=\"outline-light\"\r\n            >\r\n              Test Devices\r\n            </Badge>\r\n            <Badge\r\n              className=\"badge-common-light badge-tag mr-2\"\r\n              variant=\"outline-light\"\r\n            >\r\n              Test Devices\r\n            </Badge>\r\n            <Badge\r\n              className=\"badge-common-light badge-tag mr-2\"\r\n              variant=\"outline-light\"\r\n            >\r\n              Test Devices\r\n            </Badge>\r\n            <span className=\"tag-added\">\r\n              {\" \"}\r\n              <img className=\"tag-add-icon\" src={tagAddIcon} alt=\"menu-icon\" />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      ),\r\n\r\n      bg: \"success\",\r\n    },\r\n  ];\r\n  if (!screen) return <></>;\r\n  return (\r\n    <>\r\n      <div className=\"custom-content-heading d-flex flex-wrap align-items-center\">\r\n        <h1 className=\"mr-auto\">Screen Details</h1>\r\n        <Button\r\n          className=\"edit-screen-btn d-flex align-items-center\"\r\n          variant=\"outline-light\"\r\n          onClick={() => {\r\n            setUpdateModal(true);\r\n          }}\r\n        >\r\n          Edit Screen{\" \"}\r\n          <span className=\"btn-icon-right\">\r\n            <img className=\"edit-icon\" src={editIcon} alt=\"menu-icon\" />\r\n          </span>\r\n        </Button>\r\n      </div>\r\n      <div className=\"accordion-overflow\">\r\n        <div className=\"form-head d-flex mb-3 align-items-start mt-2 pr-3\">\r\n          <span className=\"screen-subheading\">{screen.name}</span>\r\n\r\n          <div className=\"ml-auto d-flex flex-wrap align-items-center\">\r\n            <a className=\" btn btn-primary\" variant=\"primary\"\r\n                          href={`/web-player?id=${screen.device.deviceToken}`}\r\n                          target=\"_blank\"\r\n                          rel=\"noreferrer\"\r\n                        >\r\n                        Launch Web Player\r\n                        </a>\r\n\r\n            <Button\r\n              className=\"ml-2 screen-icon-btn btn btn-primary\"\r\n              variant=\"primary\" onClick={() => {\r\n                setQuickPlayModal(true);\r\n              }}\r\n            >\r\n              <img\r\n                className=\"dropdown-list-img-icon img-fluid\"\r\n                src={powerIcon}\r\n                alt=\"menu-icon\"\r\n              />\r\n            </Button>\r\n            <Button\r\n              className=\"ml-2 screen-icon-btn btn btn-primary\"\r\n              variant=\"primary\" \r\n              onClick={() => {\r\n                setWindowsModal(true);\r\n              }}\r\n            >\r\n              <img\r\n                className=\"dropdown-list-img-icon img-fluid screenshot-icon\"\r\n                src={screenShotIcon}\r\n                alt=\"menu-icon\"\r\n              />\r\n            </Button>\r\n            <DropdownButton\r\n              as={ButtonGroup}\r\n              title=\"\"\r\n              id=\"bg-nested-dropdown\"\r\n              className=\"ml-2  more-icon-dropdown\"\r\n            >\r\n              <Dropdown.Item eventKey=\"1\">Reload Screen</Dropdown.Item>\r\n              <Dropdown.Item eventKey=\"2\">Clear Cache</Dropdown.Item>\r\n              <Dropdown.Item eventKey=\"3\">Clear Data</Dropdown.Item>\r\n              <Dropdown.Item eventKey=\"4\">Reboot display</Dropdown.Item>\r\n              \r\n              <Dropdown.Item\r\n                eventKey=\"5\"\r\n                onClick={() => {\r\n                  setDeleteModal(true);\r\n                }}\r\n              >\r\n                Deactivate Screen\r\n              </Dropdown.Item>\r\n            </DropdownButton>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row location-row mx-0\">\r\n          <div className=\"col-sm-6 p-md-0\">\r\n            <div className=\"location-col\">\r\n              <h4>\r\n                <img\r\n                  className=\"locationt-icon-img\"\r\n                  src={locationIcon}\r\n                  alt=\"menu-icon\"\r\n                />\r\n                {screen.googleLocation}\r\n              </h4>\r\n              <p className=\"active-row d-flex align-items-center\">\r\n                <span className=\"active-status\"></span> Active Now\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row accordion-overflow-scroll\">\r\n          <div className=\"col-md-12 \">\r\n            <Accordion\r\n              className=\"accordion accordion-primary custom-accordion\"\r\n              defaultActiveKey=\"\"\r\n            >\r\n              {defaultAccordion.map((d, i) => (\r\n                <div className=\"accordion__item details-accordian\" key={i}>\r\n                  <Accordion.Toggle\r\n                    as={Card.Text}\r\n                    eventKey={`${i}`}\r\n                    className={`accordion__header rounded-lg ${\r\n                      activeDefault === i ? \"\" : \"collapsed\"\r\n                    }`}\r\n                    onClick={() =>\r\n                      setActiveDefault(activeDefault === i ? -1 : i)\r\n                    }\r\n                  >\r\n                    <span className=\"accordion__header--text\">{d.title}</span>\r\n                    <span className=\"accordion__header--indicator\"></span>\r\n                  </Accordion.Toggle>\r\n                  <Accordion.Collapse eventKey={`${i}`}>\r\n                    <div className=\"accordion__body--text\">{d.text}</div>\r\n                  </Accordion.Collapse>\r\n                </div>\r\n              ))}\r\n            </Accordion>\r\n          </div>\r\n          {deleteModal && (\r\n            <DeleteConfirmation\r\n              setDeleteModal={setDeleteModal}\r\n              callbackFunction={handleDelete}\r\n              text=\"Are you sure you want to deactivate?\"\r\n              yes={\"Yes Deactivate\"}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        <QuickPlayModal\r\n        showQuickPlayModal={showQuickPlayModal}\r\n              setQuickPlayModal={setQuickPlayModal}\r\n              handleQuickPlay={handleQuickPlay}\r\n            />\r\n\r\n<WindowsModal\r\n        showWindowsModal={showWindowsModal}\r\n        setWindowsModal={setWindowsModal}\r\n              handleWindows={handleWindows}\r\n            />\r\n\r\n<UpdateModal\r\n        showUpdateModal={showUpdateModal}\r\n        setUpdateModal={setUpdateModal}\r\n              handleUpdate={handleUpdate}\r\n            />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ScreenDetails;\r\n","C:\\trendyy\\src\\utils\\api.js",["270","271"],"import fetchClient from \"./fetchClient\";\r\n\r\nexport const BASE_URL = \"http://144.126.143.140:5000\";\r\n\r\nexport function login(email, password) {\r\n  const role = \"vendor\";\r\n  const postData = {\r\n    email,\r\n    password,\r\n    role,\r\n  };\r\n\r\n  return fetchClient.post(`${BASE_URL}/vendor/auth/login`, postData);\r\n}\r\n\r\nexport async function getAllScreens() {\r\n  const response = await fetchClient.get(BASE_URL + `/vendor/display/screen`);\r\n  return response.data.data;\r\n}\r\n\r\nexport async function getAllMedia() {\r\n  const response = await fetchClient.get(BASE_URL + `/vendor/display/media`);\r\n  return response.data.data.media;\r\n}\r\n\r\nexport function addScreen(data) {\r\n  return fetchClient.post(`${BASE_URL}/vendor/display/screen`, data);\r\n}\r\n\r\nexport async function addScreenCode(deviceToken) {\r\n  const postData = {\r\n    deviceToken: deviceToken,\r\n  };\r\n  const response = await fetchClient.post(`${BASE_URL}/device/auth`, postData);\r\n  return response.data.data;\r\n}\r\n\r\nexport async function validateScreenCode(code) {\r\n  const postData = {\r\n    code: code,\r\n  };\r\n\r\n  try {\r\n    const response = await fetchClient.post(\r\n      `${BASE_URL}/vendor/display/deviceCode`,\r\n      postData\r\n    );\r\n    return response.data.statusCode === 200;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function addMedia(formData) {\r\n  const response = await fetchClient.post(\r\n    `${BASE_URL}/vendor/display/media`,\r\n    formData,\r\n    {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    }\r\n  );\r\n}\r\nexport async function deleteMedia(id) {\r\n  const response = await fetchClient.delete(\r\n    `${BASE_URL}/vendor/display/media?mediaId=${id}`\r\n  );\r\n}\r\n\r\nexport async function publishMedia(postData) {\r\n\r\n  try {\r\n    const response = await fetchClient.post(\r\n      `${BASE_URL}/vendor/display/publish`,\r\n      postData\r\n    );\r\n    return response.data.statusCode === 200;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function  deleteScreen(id) {\r\n  return await fetchClient.delete(\r\n    `${BASE_URL}/vendor/display/screen?screenId=${id}`\r\n  );\r\n}\r\n\r\n","C:\\trendyy\\src\\jsx\\layouts\\nav\\index.js",[],"C:\\trendyy\\src\\jsx\\components\\screen\\index.jsx",[],"C:\\trendyy\\src\\jsx\\components\\media\\index.jsx",[],"C:\\trendyy\\src\\jsx\\components\\settings\\index.jsx",[],"C:\\trendyy\\src\\jsx\\components\\web-player\\main.jsx",["272"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { addScreenCode, BASE_URL } from \"../../../utils/api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport { io } from \"socket.io-client\";\r\nimport WebVideoPlayer from \"./WebVideoPlayer\";\r\nconst WebMain = ({id}) => {\r\n  const [media, setMedia] = useState(\"\");\r\n  const [code, seCode] = useState(\"\");\r\n  const [contentType, setContentType] = useState(\"\");\r\n  // const [timeout, setApiTimeout] = useState(\"\");\r\n  const divRef = useRef(null);\r\n  const getScreenCode = async () => {\r\n    let timeoutTimer;\r\n    const getContent = await addScreenCode(id);\r\n    if (getContent.isVerified) {\r\n      if (getContent?.content.length) {\r\n        const getMedia =\r\n          getContent?.content[getContent.content.length - 1].media;\r\n        setMedia(`${BASE_URL}${getMedia.title}`);\r\n        setContentType(getMedia.type); \r\n        clearTimeout(timeoutTimer)\r\n        timeoutTimer = setTimeout(() => {\r\n          getScreenCode();\r\n        }, 60000);\r\n      } else {\r\n        setContentType(\"default_media\");\r\n      }\r\n    } else {\r\n      setContentType(\"code\");\r\n      seCode(getContent.deviceCode);\r\n    }\r\n  };\r\n  const defaultMediaUrl = `${BASE_URL}/default/file_1681896290177.png`;\r\n  useEffect(() => {\r\n    const socket = io(BASE_URL, {\r\n      query: { deviceToken: id },\r\n      autoConnect: false,\r\n      transports: [\"websocket\"],\r\n      secure: true,\r\n    });\r\n    getScreenCode();\r\n    // no-op if the socket is already connected\r\n    socket.connect();\r\n    function onReceiveContent(value) {\r\n        console.log(\"value:\", value)\r\n      setContentType(null);\r\n      getScreenCode();\r\n    }\r\n    function onDisconnectDevice(value) {\r\n      setContentType(null);\r\n      getScreenCode();\r\n    }\r\n    socket.on(\"disconnectDevice\", onDisconnectDevice);\r\n    \r\n    socket.on(\"receiveContent\", onReceiveContent);\r\n    return () => {\r\n      socket.disconnect();\r\n      socket.off(\"receiveContent\", onReceiveContent);\r\n    };\r\n  }, []);\r\n\r\n  const onFullScreen = () => {\r\n    if (divRef.current) {\r\n      // divRef.current.requestFullscreen();\r\n      if (divRef.current.requestFullscreen) {\r\n        divRef.current.requestFullscreen();\r\n      } else if (divRef.current.webkitRequestFullscreen) {\r\n        divRef.current.webkitRequestFullscreen();\r\n      } else if (divRef.current.msRequestFullscreen) {\r\n        divRef.current.msRequestFullscreen();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Col xl=\"12\">\r\n      <div>\r\n        <div>\r\n          <div>\r\n            {\" \"}\r\n            <button id=\"Fullscreen\" onClick={() => onFullScreen()}>\r\n              <div class=\"full-text\">\r\n                <div class=\"sec-block\">\r\n                  {\" \"}\r\n                  <i class=\"fa fa-expand\"></i>\r\n                  <p>View Full Screen</p>\r\n                </div>\r\n              </div>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {<div ref={divRef}>\r\n          {contentType === \"code\" && (\r\n            <div className=\"basic-list-group \">\r\n              <div className=\"main-block\">\r\n                <div className=\"registration-block\">\r\n                  <p className=\"registration-title\">\r\n                    Screen Registration Code{\" \"}\r\n                  </p>\r\n                  <p className=\"code\">{code}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"webrowerTextSection\">\r\n                <div className=\"how-to-register\">\r\n                  How to register this screen ?\r\n                </div>\r\n                <div className=\"guidelines-login\">\r\n                  1. Login to on your internet browser{\" \"}\r\n                </div>\r\n                <div className=\"guidelines-login\">\r\n                  2. Go to 'Screen' section &gt; Click on{\" \"}\r\n                  <Link>\r\n                    <span className=\"white-color\">'+Add Screen</span>'\r\n                  </Link>{\" \"}\r\n                  &gt; Enter above{\" \"}\r\n                  <Link>\r\n                    <span className=\"white-color\">\r\n                      Screen Registration Code\r\n                    </span>\r\n                  </Link>{\" \"}\r\n                  &gt; Click on{\" \"}\r\n                  <Link>\r\n                    <span className=\"white-color\">'Next'</span>\r\n                  </Link>\r\n                </div>\r\n\r\n                <div className=\"guidelines-login\">\r\n                  3. Enter screen name and other details &gt; Click on\r\n                  <Link>\r\n                    <span className=\"white-color\"> 'Register Screen'</span>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {contentType !==null &&  contentType === \"image\" && (\r\n            <div className=\"basic-list-group image-preview-container media-content\">\r\n              <img\r\n                className=\"webplayer-preview-img\"\r\n                src={media}\r\n                alt=\"media-img\"\r\n              />\r\n            </div>\r\n          )}\r\n          {contentType !==null &&  contentType === \"video\" && (\r\n            <div className=\"basic-list-group video-container media-content\">\r\n            <WebVideoPlayer src={media}></WebVideoPlayer>\r\n              {/* <video\r\n                title=\"video\"\r\n                width=\"100%\"\r\n                height=\"440px\"\r\n                src={}\r\n              ></video> */}\r\n            </div>\r\n          )}\r\n          {contentType === \"default_media\" && (\r\n            <div className=\"basic-list-group image-preview-container media-content\">\r\n              <img\r\n                className=\"webplayer-preview-img\"\r\n                src={defaultMediaUrl}\r\n                alt=\"media-img\"\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div class=\"console-reg\" id=\"consoleReg\">\r\n            <p>\r\n              Copy paste above Screen Registration Code in console{\" \"}\r\n              <em class=\"ti-arrow-circle-up\"></em>\r\n            </p>\r\n          </div>\r\n        </div>}\r\n\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default WebMain;\r\n","C:\\trendyy\\src\\utils\\fetchClient.js",[],"C:\\trendyy\\src\\jsx\\modals\\UpdateModal.jsx",["273","274"],"import { Button, Modal, Row, Col, Badge, Dropdown } from \"react-bootstrap\";\r\nimport cancelIcon from \"../../img/cancel-icon.png\";\r\n\r\nimport searchIcon from \"../../img/search-location.png\";\r\n\r\nconst UpdateModal = ({ showUpdateModal, setUpdateModal }) => {\r\n  return (\r\n    <Modal\r\n      className=\"fade bd-example-modal-lg mt-4 custom-modal windows-modal custom-modal-medium\"\r\n      show={showUpdateModal}\r\n      size=\"md\"\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title className=\"mr-auto\">\r\n        Update Screen\r\n        </Modal.Title>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={() => setUpdateModal(false)}\r\n        >\r\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\r\n        </Button>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n      <Row>\r\n          <Col lg={12} md={12} sm={12} xs={12}>\r\n            <div className=\"form-group\">\r\n              <label className=\"update-textfield-label\">Screen Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control input-default form-field\"\r\n                placeholder=\"Christan’s Windows\"\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col lg={12} md={12} sm={12} xs={12}>\r\n            <div className=\"form-group\">\r\n              <label className=\"update-textfield-label\">Complete Address</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control input-default form-field\"\r\n                placeholder=\"House No. 38-A Tribune colony, Ambala Cantt, Haryana\"\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col lg={12} md={12} sm={12} xs={12}>\r\n            <div className=\"form-group location-field\">\r\n              <label className=\"update-textfield-label\">Google Location</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control input-default form-field\"\r\n                placeholder=\"Haryana\"\r\n              />\r\n              <div className=\"search-location\">\r\n              <img className=\"search-loc-icon\" src={searchIcon} alt=\"search-icon\" />\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <Row className=\"w-100 m-0\">\r\n          <Col lg={12} md={12} sm={12} xs={12} className=\"pl-0 pr-0\">\r\n            <Button\r\n              variant=\"\"\r\n              type=\"button\"\r\n              className=\"btn btn-primary btn-block primary-btn w-100\"\r\n              onClick={() => setUpdateModal(false)}\r\n            >\r\n             Update Screen\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default UpdateModal;\r\n","C:\\trendyy\\src\\jsx\\modals\\WindowsModal.jsx",["275","276","277","278"],"import { Button, Modal, Row, Col, Badge, Dropdown } from \"react-bootstrap\";\r\nimport cancelIcon from \"../../img/cancel-icon.png\";\r\n\r\nimport chrisImg from \"../../img/chris-img.png\";\r\n\r\nconst WindowsModal = ({ showWindowsModal, setWindowsModal }) => {\r\n  return (\r\n    <Modal\r\n      className=\"fade bd-example-modal-lg mt-4 custom-modal windows-modal custom-modal-medium\"\r\n      show={showWindowsModal}\r\n      size=\"md\"\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title className=\"mr-auto\">\r\n        Christan’s Window’s\r\n        </Modal.Title>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={() => setWindowsModal(false)}\r\n        >\r\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\r\n        </Button>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n<div className=\"chris-imgbox\">\r\n<img className=\"chris-img img-fluid\" src={chrisImg} alt=\"chris-icon\" />\r\n\r\n</div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default WindowsModal;\r\n","C:\\trendyy\\src\\jsx\\modals\\QuickPlayModal.jsx",["279","280","281","282"],"import { Button, Modal, Row, Col, Badge, Dropdown } from \"react-bootstrap\";\r\nimport cancelIcon from \"../../img/cancel-icon.png\";\r\nimport tagCloseIcon from \"../../img/tag-close-icon.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport searchIcon from \"../../img/search.png\";\r\nimport listIcon from \"../../img/list-icon.png\";\r\nimport pic1 from \"./../../images/profile/small/pic1.jpg\";\r\nimport downArrow from \"../../img/down-arrow.png\";\r\n\r\nconst QuickPlayModal = ({ showQuickPlayModal, setQuickPlayModal }) => {\r\n  return (\r\n    <Modal\r\n      className=\"fade bd-example-modal-lg mt-4 custom-modal quick-modal custom-modal-medium\"\r\n      show={showQuickPlayModal}\r\n      size=\"md\"\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title className=\"mr-auto\">\r\n          Choose Composition to assign as Quickplay\r\n        </Modal.Title>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={() => setQuickPlayModal(false)}\r\n        >\r\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\r\n        </Button>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"search-textfield quickplay-search d-flex flex-wrap align-items-center\">\r\n          <div className=\"form-group mb-0\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control input-default \"\r\n              placeholder=\"Search...\"\r\n            />\r\n            <img className=\"search-icon\" src={searchIcon} alt=\"search\" />\r\n          </div>\r\n          <Button className=\"ml-2 icon-btn\" variant=\"primary\">\r\n            <img className=\"icon-icon\" src={listIcon} alt=\"list-icon\" />\r\n          </Button>\r\n        </div>\r\n        <div className=\"mb-3 quick-modal-table\">\r\n          <div className=\"w-100 table-responsive\">\r\n            <div id=\"example_wrapper\">\r\n              <table id=\"example\" className=\"display w-100  table custom-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Composition</th>\r\n                    <th>Date Added</th>\r\n                    <th>Duration</th>\r\n                    <th>Associated Schedule</th>\r\n                    <th>Tags</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>\r\n                      <span className=\"d-flex align-items-center\">\r\n                        <img\r\n                          className=\"rounded mr-2\"\r\n                          width=\"35\"\r\n                          src={pic1}\r\n                          alt=\"\"\r\n                        />\r\n                        <span className=\"td-content\">\r\n                          <strong>My_image_name</strong>\r\n                          <span>Added by Gauri Batra</span>\r\n                        </span>\r\n                      </span>\r\n                    </td>\r\n                    <td>\r\n                      <span className=\"d-flex align-items-center\">\r\n                        <span className=\"td-content\">\r\n                          <strong>3 Apr,2023</strong>\r\n                          <span>05 :30 PM</span>\r\n                        </span>\r\n                      </span>\r\n                    </td>\r\n                    <td>10 Sec</td>\r\n                    <td>0</td>\r\n                    <td style={{ width: \"180px\" }}>\r\n                      <span className=\"tag-container\">\r\n                        <span className=\"my-phone-tag text-truncate ml-1 mr-1 mb-1\">\r\n                          My Phone\r\n                        </span>\r\n                      </span>\r\n\r\n                      <span className=\"down-arrow\">\r\n                        <img\r\n                          className=\"down-arrow-img img-fluid\"\r\n                          src={downArrow}\r\n                          alt=\"arrow\"\r\n                        />\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>\r\n                      <span className=\"d-flex align-items-center\">\r\n                        <img\r\n                          className=\"rounded mr-2\"\r\n                          width=\"35\"\r\n                          src={pic1}\r\n                          alt=\"\"\r\n                        />\r\n                        <span className=\"td-content\">\r\n                          <strong>My_image_name</strong>\r\n                          <span>Added by Gauri Batra</span>\r\n                        </span>\r\n                      </span>\r\n                    </td>\r\n                    <td>\r\n                      <span className=\"d-flex align-items-center\">\r\n                        <span className=\"td-content\">\r\n                          <strong>3 Apr,2023</strong>\r\n                          <span>05 :30 PM</span>\r\n                        </span>\r\n                      </span>\r\n                    </td>\r\n                    <td>10 Sec</td>\r\n                    <td>0</td>\r\n                    <td style={{ width: \"180px\" }}>\r\n                      <span className=\"tag-container\">\r\n                        <span className=\"my-phone-tag text-truncate ml-1 mr-1 mb-1\">\r\n                          My Phone\r\n                        </span>\r\n                      </span>\r\n\r\n                      <span className=\"down-arrow\">\r\n                        <img\r\n                          className=\"down-arrow-img img-fluid\"\r\n                          src={downArrow}\r\n                          alt=\"arrow\"\r\n                        />\r\n                      </span>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Row className=\"w-100 m-0\">\r\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\r\n            <Button\r\n              className=\"cancel-btn w-100\"\r\n              variant=\"outline-light\"\r\n              onClick={() => setQuickPlayModal(false)}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Col>\r\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\r\n            <Button\r\n              variant=\"\"\r\n              type=\"button\"\r\n              className=\"btn btn-primary btn-block primary-btn\"\r\n              onClick={() => setQuickPlayModal(false)}\r\n            >\r\n              Assign\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default QuickPlayModal;\r\n","C:\\trendyy\\src\\jsx\\layouts\\ChatBox.js",[],"C:\\trendyy\\src\\jsx\\layouts\\nav\\Header.js",["283","284","285"],"import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n/// Scroll\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\n/// Image\r\nimport profile from \"../../../images/profile/pic1.jpg\";\r\nimport avatar from \"../../../images/avatar/1.jpg\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport LogoutPage from './Logout';\r\n\r\nconst Header = ({ onNote }) => {\r\n  const onFullScreen = () => {\r\n    var elem = document.documentElement;\r\n    if (elem.requestFullscreen) {\r\n      elem.requestFullscreen();\r\n    } else if (elem.webkitRequestFullscreen) {\r\n      elem.webkitRequestFullscreen();\r\n    } else if (elem.msRequestFullscreen) {\r\n      elem.msRequestFullscreen();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"header header-custom\" style={{ zIndex: \"11\" }}>\r\n      <div className=\"header-content\">\r\n        <nav className=\"navbar navbar-expand\">\r\n          <div className=\"collapse navbar-collapse justify-content-between\">\r\n            <div className=\"header-left\">\r\n\r\n            </div>\r\n            <ul className=\"navbar-nav header-right\">\r\n\r\n              <Dropdown as=\"li\" className=\"nav-item dropdown header-profile\">\r\n                <Dropdown.Toggle\r\n                  variant=\"\"\r\n                  as=\"a\"\r\n                  className=\"i-false c-pointer nav-link\"\r\n                  to=\"\"\r\n                  role=\"button\"\r\n                  data-toggle=\"dropdown\"\r\n                >\r\n                  <div className=\"header-info\">\r\n                    <span>\r\n                      Hello, <strong>Samuel</strong>\r\n                    </span>\r\n                  </div>\r\n                  <img src={profile} width={20} alt=\"\" />\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu\r\n                  align=\"right\"\r\n                  className=\"dropdown-menu dropdown-menu-right\"\r\n                >\r\n                  <Link to=\"/app-profile\" className=\"dropdown-item ai-icon\">\r\n                    <svg\r\n                      id=\"icon-user1\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"text-primary\"\r\n                      width={18}\r\n                      height={18}\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth={2}\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    >\r\n                      <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\r\n                      <circle cx={12} cy={7} r={4} />\r\n                    </svg>\r\n                    <span className=\"ml-2\">Profile </span>\r\n                  </Link>\r\n                  <Link to=\"/email-inbox\" className=\"dropdown-item ai-icon\">\r\n                    <svg\r\n                      id=\"icon-inbox\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"text-success\"\r\n                      width={18}\r\n                      height={18}\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth={2}\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    >\r\n                      <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\" />\r\n                      <polyline points=\"22,6 12,13 2,6\" />\r\n                    </svg>\r\n                    <span className=\"ml-2\">Inbox </span>\r\n                  </Link>\r\n                  <LogoutPage />\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\trendyy\\src\\jsx\\layouts\\nav\\NavHader.js",[],"C:\\trendyy\\src\\jsx\\modals\\FilterModal.jsx",["286","287","288","289"],"import { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\r\nimport cancelIcon from \"../../img/cancel-icon.png\";\r\nimport tagCloseIcon from \"../../img/tag-close-icon.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FilterModal = ({ showFilterModal, setFilterModal }) => {\r\n  return (\r\n    <Modal\r\n      className=\"fade bd-example-modal-lg mt-4 custom-modal custom-modal-medium\"\r\n      show={showFilterModal}\r\n      size=\"md\"\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title className=\"mr-auto\">Filter</Modal.Title>\r\n        <span className=\"clear-filter-link\">Clear Filter</span>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={() => setFilterModal(false)}\r\n        >\r\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\r\n        </Button>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"filter-row mb-3\">\r\n          <h6>Show</h6>\r\n          <div className=\"d-flex flex-wrap\">\r\n            <div className=\"custom-control custom-checkbox common-checkbox mr-3\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"custom-control-input\"\r\n                id=\"Landscape\"\r\n                required\r\n              />\r\n              <label className=\"custom-control-label\" htmlFor=\"Landscape\">\r\n                Landscape\r\n              </label>\r\n            </div>\r\n            <div className=\"custom-control custom-checkbox common-checkbox mr-3\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"custom-control-input\"\r\n                id=\"Landscape1\"\r\n                required\r\n              />\r\n              <label className=\"custom-control-label\" htmlFor=\"Landscape1\">\r\n                Landscape\r\n              </label>\r\n            </div>\r\n            <div className=\"custom-control custom-checkbox common-checkbox mr-3\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"custom-control-input\"\r\n                id=\"Landscape2\"\r\n                required\r\n              />\r\n              <label className=\"custom-control-label\" htmlFor=\"Landscape2\">\r\n                Landscape\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"filter-row mb-3\">\r\n          <h6>Tags</h6>\r\n          <div className=\"d-flex flex-wrap\">\r\n            <Badge className=\"badge-common-light mr-2\" variant=\"outline-light\">\r\n              Test Devices\r\n            </Badge>\r\n            <Badge className=\"badge-common-light mr-2\" variant=\"outline-light\">\r\n              Test Devices\r\n            </Badge>\r\n            <Badge className=\"badge-common-light mr-2\" variant=\"outline-light\">\r\n              Test Devices\r\n            </Badge>\r\n          </div>\r\n        </div>\r\n        <div className=\"filter-row mb-3\">\r\n          <h6>Groups</h6>\r\n          <div className=\"d-flex flex-wrap\">\r\n            <Badge className=\"badge-common-light mr-2\" variant=\"outline-light\">\r\n              Test Devices\r\n            </Badge>\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          variant=\"\"\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-block primary-btn\"\r\n          onClick={() => setFilterModal(false)}\r\n        >\r\n          Apply\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default FilterModal;\r\n","C:\\trendyy\\src\\jsx\\components\\screen\\listScreens.jsx",[],"C:\\trendyy\\src\\jsx\\modals\\AddScreenModal.jsx",[],"C:\\trendyy\\src\\jsx\\components\\settings\\defaultComposition.jsx",["290"],"import React from \"react\";\r\nimport {  Col, } from \"react-bootstrap\";\r\nimport emptyMediaImg from \"../../../images/card/1.png\";\r\nimport {BASE_URL}  from \"../../../utils/api\"\r\n\r\nconst DefaultComposition = () => {\r\n  const defaultMediaUrl = `${BASE_URL}/default/file_1681896290177.png`;\r\n  return (\r\n    <>\r\n      <div className=\"row settings-default\">\r\n        <Col xl=\"6\">\r\n          <div className=\"default-composition-preview\">\r\n            <div className=\"thumbnail\">\r\n              <img className=\"imgContent\" src={defaultMediaUrl} alt=\"Card cap\" />\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col xl=\"6\">\r\n          <div className=\"mb-4\">\r\n            <h4 className=\"card-title card-intro-title\">\r\n              Organisation default composition\r\n            </h4>\r\n            <p>\r\n              The composition will be applied to all newly added displays in the\r\n              organization\r\n            </p>\r\n            <p className=\"font-weight-bold\">\r\n            Default Composition:\r\n            Screenshot 2 - Composition \r\n            <span className='btn-icon-right text-info'>\r\n                    <i className='fa fa-pencil' />\r\n                  </span>\r\n            </p>\r\n            <p className=\"font-weight-bold\">\r\n            Duration:\r\n            10 seconds\r\n            </p>\r\n            \r\n          </div>\r\n        </Col>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DefaultComposition;\r\n","C:\\trendyy\\src\\jsx\\modals\\UploadMediaFileModal.jsx",[],"C:\\trendyy\\src\\jsx\\components\\media\\listMedia.jsx",["291"],"import React, { useState } from \"react\";\r\nimport { Table, Dropdown } from \"react-bootstrap\";\r\nimport AddNewTagModal from \"../../modals/AddNewTagModal\";\r\nimport downArrow from \"../../../img/down-arrow.png\";\r\nimport menuIcon from \"../../../img/menu-icon.png\";\r\nimport defaultComparisonIcon from \"../../../img/default-comparison-icon.png\";\r\nimport emptyMediaImg from \"../../../img/addmedia-empty-img.png\";\r\nimport nameAvatar from \"../../../img/assets-avatar-img.png\";\r\nimport deleteIcon from \"../../../img/delete-icon.png\";\r\nimport {\r\n  getDatetimeIn12Hours,\r\n  humanReadableFormattedDateString,\r\n} from \"../../../utils/UtilsService\";\r\nimport DeleteConfirmation from \"../../modals/DeleteConfirmation\";\r\nimport { deleteMedia, BASE_URL } from \"../../../utils/api\";\r\nimport PublishMediaModal from \"../../modals/PublishMediaModal\";\r\n\r\nconst ListMedia = ({ allMedia,callAllMediaApi }) => {\r\n  const [showNewTagModal, setNewTagModal] = useState(false);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [selectedMedia, setSelectedMedia] = useState(\"\");\r\n  const [showPublishPopUp, setShowPublishPopUp] = useState(false);\r\n  \r\n  // use effect\r\n\r\n\r\n  const handleDelete = async () => {\r\n    setDeleteModal(false)\r\n    await deleteMedia(selectedMedia._id)\r\n    callAllMediaApi()\r\n   };\r\n\r\n   const handlePublishcOpen = (media)=>{\r\n    setShowPublishPopUp(media);\r\n   }\r\n  return (\r\n    <>\r\n      {allMedia !== \"\" ? (\r\n        <Table responsive className=\"custom-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Type</th>\r\n              <th>Uploaded Date</th>\r\n              <th>Properties</th>\r\n              <th>Tags</th>\r\n              <th>More</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {allMedia.map((media) => {\r\n              return (\r\n                <tr>\r\n                  <td>\r\n                    <span className=\"td-content d-flex name-td-content\">\r\n                      <span className=\"name-img mr-2\">\r\n                      {media.type === \"image\" && <img\r\n                          className=\"media-img img-fluid\"\r\n                          src={`${BASE_URL}${media.title}`}\r\n                          alt=\"media-img\"\r\n                        />}\r\n                         {media.type === \"video\" && <video\r\n                          className=\"media-img img-fluid\"\r\n                          src={`${BASE_URL}${media.title}`}\r\n                          alt=\"media-img\"\r\n                        />}\r\n                      </span>\r\n                      <span className=\"name-content d-flex flex-column flex-grow-1\">\r\n                        <strong>{media.title.split(\"/\")[media.title.split(\"/\").length -1]}</strong>\r\n                        <span>{media.createdBy.name}</span>\r\n                      </span>\r\n                    </span>\r\n                  </td>\r\n                  <td>{media.type.slice(0, 1).toUpperCase() + media.type.slice(1)}</td>\r\n                  <td>\r\n                    <span className=\"td-content\">\r\n                      <strong>\r\n                        {humanReadableFormattedDateString(media.createdAt)}\r\n                      </strong>\r\n                      <span>{getDatetimeIn12Hours(media.createdAt)}</span>\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"td-content\">\r\n                      <strong>{media.properties.split(\",\")[1]}</strong>\r\n                      <span>{media.properties.split(\",\")[0]}</span>\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    {media.tags.map((tag) => {\r\n                      return <span className=\"my-phone-tag text-truncate ml-1\">{tag}</span>;\r\n                    })}\r\n                    <span\r\n                      className=\"down-arrow\"\r\n                      onClick={() => {\r\n                        setSelectedMedia(media)\r\n                        setNewTagModal(true);\r\n                      }}\r\n                    >\r\n                      <img\r\n                        className=\"down-arrow-img img-fluid\"\r\n                        src={downArrow}\r\n                        alt=\"arrow\"\r\n                      />\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <Dropdown className=\"dropdown-toggle-menu\">\r\n                      <Dropdown.Toggle variant=\"\" className=\"p-0  mb-2\">\r\n                        <span className=\"table-menu-icon\">\r\n                          <img\r\n                            className=\"menu-img img-fluid\"\r\n                            src={menuIcon}\r\n                            alt=\"menu-icon\"\r\n                          />\r\n                        </span>\r\n                      </Dropdown.Toggle>\r\n                      <Dropdown.Menu>\r\n                        <Dropdown.Item href=\"#\" className=\"dropdown-list-item\">\r\n                          <div className=\"d-flex\" onClick={()=>{\r\n                                handlePublishcOpen(media)\r\n                              }}>\r\n                            <div className=\"dropdown-list-icon\">\r\n                              <img\r\n                                className=\"dropdown-list-img img-fluid\"\r\n                                src={defaultComparisonIcon}\r\n                                alt=\"menu-icon\"\r\n                              />\r\n                            </div>\r\n                            <div className=\"dropdown-menu-list\">\r\n                              <span className=\"menu-heading\" >\r\n                                Publish on Screen\r\n                              </span>\r\n                              <span className=\"menu-description\">\r\n                                Get to know more about screen info\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item href=\"#\" className=\"dropdown-list-item\" onClick={()=>{\r\n                              setSelectedMedia(media)\r\n                              setDeleteModal(true)\r\n                            }}>\r\n                          <div className=\"d-flex\">\r\n                            <div className=\"dropdown-list-icon\" >\r\n                              <img\r\n                                className=\"dropdown-list-img img-fluid\"\r\n                                src={deleteIcon}\r\n                                alt=\"menu-icon\"\r\n                              />\r\n                            </div>\r\n                            <div className=\"dropdown-menu-list\">\r\n                              <span className=\"menu-heading\">Delete</span>\r\n                              <span className=\"menu-description\">\r\n                                Get to know more about screen info\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </Dropdown.Item>\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <div className=\"empty-media text-center\">\r\n          <div class=\"empty-media-img mx-auto\">\r\n            <img\r\n              className=\"media-img img-fluid\"\r\n              src={emptyMediaImg}\r\n              alt=\"media-img\"\r\n            />\r\n          </div>\r\n          <h3>Add Media</h3>\r\n          <p>\r\n            Upload your favourite images and videos from the local storage\r\n            <br /> of your device\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {showNewTagModal && (\r\n        <AddNewTagModal\r\n          selected={selectedMedia}\r\n          setNewTagModal={setNewTagModal}\r\n          \r\n        />\r\n      )}\r\n      {showPublishPopUp && (\r\n        <PublishMediaModal\r\n          selected={showPublishPopUp}\r\n          setShowPublishPopUp={setShowPublishPopUp}\r\n        />\r\n      )}\r\n      {deleteModal && <DeleteConfirmation setDeleteModal={setDeleteModal} callbackFunction={handleDelete} text=\"Are you sure you want to delete?\" yes={\"Yes Deactivate\"}/>}\r\n    </>\r\n  );\r\n};\r\nexport default ListMedia;\r\n","C:\\trendyy\\src\\jsx\\layouts\\nav\\SideBar.js",[],"C:\\trendyy\\src\\jsx\\components\\web-player\\WebVideoPlayer.jsx",[],"C:\\trendyy\\src\\jsx\\layouts\\nav\\Logout.js",[],"C:\\trendyy\\src\\jsx\\components\\chatBox\\Alerts.js",[],"C:\\trendyy\\src\\jsx\\components\\chatBox\\Chat.js",[],"C:\\trendyy\\src\\jsx\\components\\chatBox\\Notes.js",[],"C:\\trendyy\\src\\utils\\UtilsService.js",["292","293","294","295"],"export const isValidDate = (d) => {\r\n    return d instanceof Date && !isNaN(d);\r\n}\r\n\r\nexport const formattedDateString = (d) => {\r\n    d = new Date(d);\r\n    const yyyy = d.getFullYear();\r\n    const mm = dateDigits(d.getMonth() + 1);\r\n    const dd = dateDigits(d.getDate());\r\n    return yyyy + \"-\" + mm + \"-\" + dd;\r\n};\r\n\r\nexport const humanReadableFormattedDateString = (date) => {\r\n    console.log(date)\r\n    date = new Date(date);\r\n    let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    let day = dateDigits(date.getDate());\r\n    let month = months[date.getMonth()];\r\n    let year = date.getFullYear();\r\n    return day + ' ' + month + ', ' + year;\r\n}\r\n\r\nexport const formattedTimeString = (d) => {\r\n    d = new Date(d);\r\n    return dateDigits(d.getHours()) + \":\" + dateDigits(d.getMinutes()) + \":00\";\r\n};\r\n\r\nexport const getHOrMFromLocalTimeString = (localTimeString, hOrM = 'h') => {\r\n    const localTimeArr = localTimeString.split(':');\r\n    if (localTimeArr.length > 1) {\r\n        if (hOrM === 'h') {\r\n            return +localTimeString.split(':')[0];\r\n        } else {\r\n            return +localTimeString.split(':')[1];\r\n        }\r\n    } else {\r\n        return 0;\r\n    }\r\n};\r\n\r\nexport const dateDigits = (v, digits = 2) => {\r\n    let str = \"\";\r\n    for (let i = digits; i > 1; i--) {\r\n        str += \"0\";\r\n    }\r\n\r\n    return (str + v).slice(-digits);\r\n};\r\n\r\nexport const currencyFormat = (num, toFixed = 2) => {\r\n    num = num ? +num : 0;\r\n    return '$' + num.toFixed(toFixed).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n}\r\n\r\nexport const numberThFormat = (num) => {\r\n    switch(num) {\r\n        case 1: \r\n            return num + 'st';\r\n        break;\r\n        case 2: \r\n            return num + 'nd';\r\n        break;\r\n        case 3: \r\n            return num + 'rd';\r\n        break;\r\n        default: \r\n            return num + 'th';\r\n        break;\r\n    }\r\n}\r\n\r\nexport const priceValue = (formattedPrice = \"$0.00\") => {\r\n    formattedPrice = formattedPrice ? formattedPrice + \"\" : \"$0.00\";\r\n    return +formattedPrice.split(\",\").join(\"\").split(\" \").join(\"\").split(\"$\").join(\"\")\r\n};\r\n\r\nexport const isMobile = () => {\r\n    return window.innerWidth < 768;\r\n};\r\n\r\nexport const randomStr = (length) => {\r\n    var result = '';\r\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r\n    var charactersLength = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const defaultPeriods = [\r\n    {\r\n        dayOfWeek: \"SUN\",\r\n        startLocalTime: \"7:00:00\",\r\n        endLocalTime: \"20:00:00\",\r\n        closed: false\r\n    },\r\n    {\r\n        dayOfWeek: \"MON\",\r\n        startLocalTime: \"7:00:00\",\r\n        endLocalTime: \"20:00:00\",\r\n        closed: false\r\n    },\r\n    {\r\n        dayOfWeek: \"TUE\",\r\n        startLocalTime: \"7:00:00\",\r\n        endLocalTime: \"20:00:00\",\r\n        closed: false\r\n    },\r\n    {\r\n        dayOfWeek: \"WED\",\r\n        startLocalTime: \"7:00:00\",\r\n        endLocalTime: \"20:00:00\",\r\n        closed: false\r\n    },\r\n    {\r\n        dayOfWeek: \"THU\",\r\n        startLocalTime: \"7:00:00\",\r\n        endLocalTime: \"20:00:00\",\r\n        closed: false\r\n    },\r\n    {\r\n        dayOfWeek: \"FRI\",\r\n        startLocalTime: \"7:00:00\",\r\n        endLocalTime: \"20:00:00\",\r\n        closed: false\r\n    },\r\n    {\r\n        dayOfWeek: \"SAT\",\r\n        startLocalTime: \"7:00:00\",\r\n        endLocalTime: \"20:00:00\",\r\n        closed: false\r\n    }\r\n];\r\n\r\nexport const getDatetimeIn12Hours = (datetimeString) =>{\r\n    const date = new Date(datetimeString);\r\n    const options = { hour: 'numeric', minute: 'numeric', hour12: true };\r\n    return  date.toLocaleTimeString('en-US', options);\r\n}","C:\\trendyy\\src\\jsx\\components\\screen\\tagInputField.jsx",[],"C:\\trendyy\\src\\jsx\\components\\media\\fileUploadWithPreview.jsx",[],"C:\\trendyy\\src\\jsx\\modals\\PublishMediaModal.jsx",["296"],"import { Button, Modal, Row, Col, Badge, Table } from \"react-bootstrap\";\r\nimport cancelIcon from \"../../img/cancel-icon.png\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getAllScreens, publishMedia } from \"../../utils/api\";\r\nimport TableLoader from \"../components/TableLoader\";\r\nimport '../components/Table.css';\r\n// import tagCloseIcon from \"../../img/tag-close-icon.png\";\r\n\r\nconst PublishMediaModal = ({ setShowPublishPopUp, selected }) => {\r\n  const [allScreens, setAllScreens] = useState(\"\");\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n  const [checkedValues, setCheckedValues] = useState([]);\r\n  const [published, setPublished] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  // use effect\r\n  useEffect(() => {\r\n    callAllScreenApi();\r\n  }, []);\r\n\r\n  const callAllScreenApi = async () => {\r\n    setLoading(true);\r\n    const list = await getAllScreens();\r\n    setLoading(false);\r\n    setAllScreens(list);\r\n  };\r\n\r\n  const handleCheckboxChange = (event) => {\r\n    const newCheckedItems = {\r\n      ...checkedItems,\r\n      [event.target.name]: event.target.checked,\r\n    };\r\n    const selectedScreens = [];\r\n    for (const key in newCheckedItems) {\r\n      if (newCheckedItems[key] === true) {\r\n        selectedScreens.push(key);\r\n      }\r\n    }\r\n    setCheckedValues(selectedScreens);\r\n    setCheckedItems(newCheckedItems);\r\n  };\r\n\r\n  const handleSelectAllChange = (event) => {\r\n    const newCheckedItems = {};\r\n    allScreens.forEach((item) => {\r\n      newCheckedItems[item._id] = event.target.checked;\r\n    });\r\n    const selectedScreens = [];\r\n    for (const key in newCheckedItems) {\r\n      if (newCheckedItems[key] === true) {\r\n        selectedScreens.push(key);\r\n      }\r\n    }\r\n    setCheckedValues(selectedScreens);\r\n    setCheckedItems(newCheckedItems);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n   await publishMedia({\r\n      mediaId: selected._id,\r\n      screenIds: checkedValues,\r\n      duration: 1,\r\n    });\r\n    setPublished(true);\r\n    // setShowPublishPopUp(false);\r\n  };\r\n  return (\r\n<>\r\n    \r\n      <Modal\r\n      className={`fade bd-example-modal-lg mt-4 custom-modal ${\r\n        published ? \"custom-modal-medium\" : \"custom-modal-large\"\r\n      }`}\r\n      show={true}\r\n      size=\"md\"\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title>Publish Media</Modal.Title>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={() => setShowPublishPopUp(false)}\r\n        >\r\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\r\n        </Button>\r\n      </Modal.Header>\r\n\r\n      {published && <Modal.Body><div style={{display:\"flex\", alignItems:\"center\", justifyContent:\"center\"}}><h3>Media Published</h3></div></Modal.Body>}\r\n      {!published && (\r\n        <Modal.Body>\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"width50\">\r\n                  <div className=\"custom-control custom-checkbox checkbox-success check-lg mr-3\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"custom-control-input\"\r\n                      id=\"checkbox1_exam_all\"\r\n                      onChange={handleSelectAllChange}\r\n                      required=\"\"\r\n                    />\r\n                    <label\r\n                      className=\"custom-control-label\"\r\n                      htmlFor=\"checkbox1_exam_all\"\r\n                    ></label>\r\n                  </div>\r\n                </th>\r\n                <th>Screen</th>\r\n                <th>Last Seen</th>\r\n                <th>Default Composition</th>\r\n                <th>Current Schedule</th>\r\n              </tr>\r\n            </thead>\r\n            {loading  ? (\r\n          <TableLoader colSpan={5}/>\r\n        ) : (\r\n            <tbody>\r\n              {allScreens !== \"\" &&\r\n                allScreens.map((screen) => {\r\n                  return (\r\n                    <tr>\r\n                      <td>\r\n                        <div className=\"custom-control custom-checkbox checkbox-success check-lg mr-3\">\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            className=\"custom-control-input\"\r\n                            id={screen._id}\r\n                            name={screen._id}\r\n                            checked={checkedItems[screen._id]}\r\n                            onChange={handleCheckboxChange}\r\n                          />\r\n                          <label\r\n                            className=\"custom-control-label\"\r\n                            htmlFor={screen._id}\r\n                          ></label>\r\n                        </div>\r\n                      </td>\r\n\r\n                      <td>\r\n                        <span className=\"td-content\">\r\n                          <strong>{screen.name}</strong>\r\n                          <span>{screen.screenLocation}</span>\r\n                        </span>\r\n                      </td>\r\n                      <td>\r\n                        <span className=\"d-flex align-items-center\">\r\n                          <span className=\"status status-green\"></span>\r\n                          <span className=\"td-content\">\r\n                            <strong>{screen.name}</strong>\r\n                            <span>{screen.screenLocation}</span>\r\n                          </span>\r\n                        </span>\r\n                      </td>\r\n                      <td>Default Compo. </td>\r\n                      <td>No Schedule</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n            )}\r\n          </Table>\r\n        </Modal.Body>\r\n      )}\r\n\r\n      <Modal.Footer>\r\n        {!published && (\r\n          <Row className=\"w-100 m-0\">\r\n            <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\r\n              <Button className=\"cancel-btn w-100\" variant=\"outline-light\">\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\r\n              <Button\r\n                disabled={checkedValues.length === 0}\r\n                variant=\"\"\r\n                type=\"button\"\r\n                className=\"btn btn-primary btn-block primary-btn\"\r\n                onClick={handleSubmit}\r\n              >\r\n                Publish\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </Modal.Footer>\r\n    </Modal>\r\n      \r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PublishMediaModal;\r\n","C:\\trendyy\\src\\jsx\\modals\\DeleteConfirmation.jsx",[],"C:\\trendyy\\src\\jsx\\components\\chatBox\\MsgBox.js",[],"C:\\trendyy\\src\\jsx\\modals\\AddNewTagModal.jsx",[],"C:\\trendyy\\src\\jsx\\components\\TableLoader.jsx",[],"C:\\trendyy\\src\\jsx\\components\\layout\\Layout.jsx",[],"C:\\trendyy\\src\\jsx\\components\\layout\\ChooseLayout.jsx",[],"C:\\trendyy\\src\\jsx\\components\\layout\\CreateComposition.jsx",["297"],"import React from \"react\";\r\nimport { Button, Row, Col } from \"react-bootstrap\";\r\nimport searchIcon from \"../../../img/search.png\";\r\nimport listIcon from \"../../../img/list-icon.png\";\r\nimport emptyMediaImg from \"../../../img/layout-img.png\";\r\nimport CompositionTable from \"./CompositionTable\";\r\nimport ZoneInfoTable from \"./ZoneInfoTable\";\r\n\r\nconst CreateComposition = () => {\r\n  return (\r\n    <>\r\n      <div className=\"custom-content-heading d-flex flex-wrap\">\r\n        <h1 className=\"mr-auto\">Create Compostition</h1>\r\n        <div className=\"preview-composition d-flex flex-wrap\">\r\n        <Button\r\n          className=\"mr-2 preview-btn\"\r\n          variant=\"info\"\r\n        >\r\n          Preview\r\n        </Button>\r\n        <Button\r\n          className=\"save-composition-btn\"\r\n          variant=\"info\"\r\n        >\r\n          Save Composition\r\n        </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"form-head d-flex mb-3 align-items-start\">\r\n        <Button\r\n          className=\"mr-2\"\r\n          variant=\"info add-screen-btn\"\r\n        >\r\n          Add Media\r\n          <span className=\"btn-icon-right\">\r\n            <div class=\"glyph-icon flaticon-381-add-1\"></div>\r\n          </span>\r\n        </Button>\r\n        <div className=\"search-textfield ml-auto d-flex flex-wrap align-items-center\">\r\n          <div className=\"form-group mb-0\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control input-default \"\r\n              placeholder=\"Search...\"\r\n            />\r\n            <img className=\"search-icon\" src={searchIcon} alt=\"search\" />\r\n          </div>\r\n          <Button className=\"ml-2 icon-btn\" variant=\"primary\">\r\n            <img className=\"icon-icon\" src={listIcon} alt=\"list-icon\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n{/* Empty Layout */}\r\n      {/* <div className=\"empty-media text-center\">\r\n        <div class=\"empty-media-img layout-empty-img mx-auto\">\r\n          <img\r\n            className=\"media-img img-fluid\"\r\n            src={emptyMediaImg}\r\n            alt=\"media-img\"\r\n          />\r\n        </div>\r\n        <h3>Add Composition</h3>\r\n        <p>\r\n          Add Media files to composition, Lorem ipsum dolor is a dummy <br />{\" \"}\r\n          text. Dummy text.\r\n        </p>\r\n      </div> */}\r\n\r\n      <div className=\"custom-comp-table flex-1\">\r\n        <Row className=\"h-100\">\r\n        <Col lg=\"6\" md=\"6\" sm=\"6\" xs=\"12\" className=\"pr-0 border-col\">\r\n        <CompositionTable />\r\n          </Col>\r\n          <Col lg=\"6\" md=\"6\" sm=\"6\" xs=\"12\" className=\"pl-0\">\r\n        <ZoneInfoTable />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateComposition;\r\n","C:\\trendyy\\src\\jsx\\components\\layout\\CompositionTable.jsx",["298"],"import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport downArrow from \"../../../img/down-arrow.png\";\r\nimport avatarImg from \"../../../img/assets-avatar-img.png\";\r\n\r\nconst CompositionTable = () => {\r\n  return (\r\n    <>\r\n      <Table responsive className=\"custom-table screen-table layout-table h-100\">\r\n        <thead>\r\n          <tr>\r\n            <th>Media</th>\r\n            <th>Type</th>\r\n            <th>Tags</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <span class=\"td-content d-flex name-td-content\">\r\n                <span class=\"name-img mr-2\">\r\n                  <img className=\"search-icon\" src={avatarImg} alt=\"search\" />\r\n                </span>\r\n                <span class=\"name-content d-flex flex-column flex-grow-1\">\r\n                  <strong>file_1681887316427.png</strong>\r\n                  <span>Test Vendor</span>\r\n                </span>\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <span className=\"d-flex align-items-center\">\r\n                <span className=\"td-content\">\r\n                  <strong>Image</strong>\r\n                  <span>700*610px</span>\r\n                </span>\r\n              </span>\r\n            </td>\r\n            <td style={{ width: \"180px\" }}>\r\n              <span className=\"tag-container\">My Tag</span>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <span class=\"td-content d-flex name-td-content\">\r\n                <span class=\"name-img mr-2\">\r\n                  <img className=\"search-icon\" src={avatarImg} alt=\"search\" />\r\n                </span>\r\n                <span class=\"name-content d-flex flex-column flex-grow-1\">\r\n                  <strong>file_1681887316427.png</strong>\r\n                  <span>Test Vendor</span>\r\n                </span>\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <span className=\"d-flex align-items-center\">\r\n                <span className=\"td-content\">\r\n                  <strong>Image</strong>\r\n                  <span>700*610px</span>\r\n                </span>\r\n              </span>\r\n            </td>\r\n            <td style={{ width: \"180px\" }}>\r\n              <span className=\"tag-container\">My Tag</span>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CompositionTable;\r\n","C:\\trendyy\\src\\jsx\\components\\layout\\ZoneInfoTable.jsx",["299"],"import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport downArrow from \"../../../img/down-arrow.png\";\r\nimport avatarImg from \"../../../img/assets-avatar-img.png\";\r\nimport editBtnImg from \"../../../img/edit-btn.png\";\r\nimport deleteBtnImg from \"../../../img/delete-btn.png\";\r\n\r\nconst ZoneInfoTable = () => {\r\n  return (\r\n    <>\r\n      <Table\r\n        responsive\r\n        className=\"custom-table screen-table layout-table h-100\"\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th colSpan={4}>\r\n              <span className=\"d-flex flex-wrap\">\r\n                <span className=\"yellow-box\"></span>\r\n                <span className=\"zone-section d-flex flex-column\">\r\n                  <span className=\"zone\">Zone 1</span>\r\n                  <span className=\"duration\">Duration : 10 sec</span>\r\n                </span>\r\n              </span>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>1.</td>\r\n            <td>\r\n              <span class=\"td-content d-flex name-td-content\">\r\n                <span class=\"name-img mr-2\">\r\n                  <img className=\"search-icon\" src={avatarImg} alt=\"search\" />\r\n                </span>\r\n                <span class=\"name-content d-flex flex-column flex-grow-1\">\r\n                  <strong>My_image_name</strong>\r\n                  <span>Added by Gauri Batra</span>\r\n                </span>\r\n              </span>\r\n            </td>\r\n            <td style={{ width: \"180px\" }}>\r\n              <span className=\"tag-container\">10sec</span>\r\n            </td>\r\n            <td>\r\n              <span className=\"layout-edit-btn mr-2\">\r\n                <img className=\"edit-icon\" src={editBtnImg} alt=\"search\" />\r\n              </span>\r\n              <span className=\"layout-edit-btn\">\r\n                <img className=\"edit-icon\" src={deleteBtnImg} alt=\"search\" />\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ZoneInfoTable;\r\n","C:\\trendyy\\src\\jsx\\components\\push\\PushScreen.jsx",[],"C:\\trendyy\\src\\jsx\\components\\push\\SelectComparison.jsx",["300","301","302","303","304"],{"ruleId":"305","replacedBy":"306"},{"ruleId":"307","replacedBy":"308"},{"ruleId":"309","severity":1,"message":"310","line":1,"column":37,"nodeType":"311","messageId":"312","endLine":1,"endColumn":45},{"ruleId":"309","severity":1,"message":"313","line":2,"column":10,"nodeType":"311","messageId":"312","endLine":2,"endColumn":12},{"ruleId":"314","severity":1,"message":"315","line":37,"column":8,"nodeType":"316","endLine":37,"endColumn":33,"suggestions":"317"},{"ruleId":"309","severity":1,"message":"318","line":6,"column":10,"nodeType":"311","messageId":"312","endLine":6,"endColumn":13},{"ruleId":"309","severity":1,"message":"319","line":6,"column":15,"nodeType":"311","messageId":"312","endLine":6,"endColumn":18},{"ruleId":"309","severity":1,"message":"320","line":6,"column":20,"nodeType":"311","messageId":"312","endLine":6,"endColumn":24},{"ruleId":"309","severity":1,"message":"321","line":13,"column":8,"nodeType":"311","messageId":"312","endLine":13,"endColumn":18},{"ruleId":"309","severity":1,"message":"322","line":14,"column":8,"nodeType":"311","messageId":"312","endLine":14,"endColumn":17},{"ruleId":"314","severity":1,"message":"323","line":42,"column":6,"nodeType":"316","endLine":42,"endColumn":8,"suggestions":"324"},{"ruleId":"309","severity":1,"message":"325","line":55,"column":9,"nodeType":"311","messageId":"312","endLine":55,"endColumn":17},{"ruleId":"309","severity":1,"message":"325","line":66,"column":9,"nodeType":"311","messageId":"312","endLine":66,"endColumn":17},{"ruleId":"314","severity":1,"message":"326","line":61,"column":6,"nodeType":"316","endLine":61,"endColumn":8,"suggestions":"327"},{"ruleId":"309","severity":1,"message":"328","line":1,"column":35,"nodeType":"311","messageId":"312","endLine":1,"endColumn":40},{"ruleId":"309","severity":1,"message":"329","line":1,"column":42,"nodeType":"311","messageId":"312","endLine":1,"endColumn":50},{"ruleId":"309","severity":1,"message":"318","line":1,"column":25,"nodeType":"311","messageId":"312","endLine":1,"endColumn":28},{"ruleId":"309","severity":1,"message":"319","line":1,"column":30,"nodeType":"311","messageId":"312","endLine":1,"endColumn":33},{"ruleId":"309","severity":1,"message":"328","line":1,"column":35,"nodeType":"311","messageId":"312","endLine":1,"endColumn":40},{"ruleId":"309","severity":1,"message":"329","line":1,"column":42,"nodeType":"311","messageId":"312","endLine":1,"endColumn":50},{"ruleId":"309","severity":1,"message":"328","line":1,"column":35,"nodeType":"311","messageId":"312","endLine":1,"endColumn":40},{"ruleId":"309","severity":1,"message":"329","line":1,"column":42,"nodeType":"311","messageId":"312","endLine":1,"endColumn":50},{"ruleId":"309","severity":1,"message":"330","line":3,"column":8,"nodeType":"311","messageId":"312","endLine":3,"endColumn":20},{"ruleId":"309","severity":1,"message":"331","line":4,"column":10,"nodeType":"311","messageId":"312","endLine":4,"endColumn":14},{"ruleId":"309","severity":1,"message":"332","line":5,"column":8,"nodeType":"311","messageId":"312","endLine":5,"endColumn":24},{"ruleId":"309","severity":1,"message":"333","line":9,"column":8,"nodeType":"311","messageId":"312","endLine":9,"endColumn":14},{"ruleId":"309","severity":1,"message":"334","line":14,"column":9,"nodeType":"311","messageId":"312","endLine":14,"endColumn":21},{"ruleId":"309","severity":1,"message":"318","line":1,"column":25,"nodeType":"311","messageId":"312","endLine":1,"endColumn":28},{"ruleId":"309","severity":1,"message":"319","line":1,"column":30,"nodeType":"311","messageId":"312","endLine":1,"endColumn":33},{"ruleId":"309","severity":1,"message":"330","line":3,"column":8,"nodeType":"311","messageId":"312","endLine":3,"endColumn":20},{"ruleId":"309","severity":1,"message":"331","line":4,"column":10,"nodeType":"311","messageId":"312","endLine":4,"endColumn":14},{"ruleId":"309","severity":1,"message":"335","line":3,"column":8,"nodeType":"311","messageId":"312","endLine":3,"endColumn":21},{"ruleId":"309","severity":1,"message":"336","line":8,"column":8,"nodeType":"311","messageId":"312","endLine":8,"endColumn":18},{"ruleId":"337","severity":1,"message":"338","line":59,"column":9,"nodeType":"339","messageId":"340","endLine":59,"endColumn":15},{"ruleId":"337","severity":1,"message":"338","line":62,"column":9,"nodeType":"339","messageId":"340","endLine":62,"endColumn":15},{"ruleId":"337","severity":1,"message":"338","line":65,"column":9,"nodeType":"339","messageId":"340","endLine":65,"endColumn":15},{"ruleId":"337","severity":1,"message":"338","line":68,"column":9,"nodeType":"339","messageId":"340","endLine":68,"endColumn":15},{"ruleId":"309","severity":1,"message":"328","line":1,"column":35,"nodeType":"311","messageId":"312","endLine":1,"endColumn":40},{"ruleId":"309","severity":1,"message":"335","line":5,"column":8,"nodeType":"311","messageId":"312","endLine":5,"endColumn":21},{"ruleId":"309","severity":1,"message":"341","line":3,"column":8,"nodeType":"311","messageId":"312","endLine":3,"endColumn":17},{"ruleId":"309","severity":1,"message":"341","line":3,"column":8,"nodeType":"311","messageId":"312","endLine":3,"endColumn":17},{"ruleId":"309","severity":1,"message":"329","line":2,"column":18,"nodeType":"311","messageId":"312","endLine":2,"endColumn":26},{"ruleId":"309","severity":1,"message":"341","line":6,"column":8,"nodeType":"311","messageId":"312","endLine":6,"endColumn":17},{"ruleId":"309","severity":1,"message":"342","line":7,"column":8,"nodeType":"311","messageId":"312","endLine":7,"endColumn":16},{"ruleId":"309","severity":1,"message":"343","line":8,"column":8,"nodeType":"311","messageId":"312","endLine":8,"endColumn":29},{"ruleId":"309","severity":1,"message":"344","line":9,"column":8,"nodeType":"311","messageId":"312","endLine":9,"endColumn":18},"no-native-reassign",["345"],"no-negated-in-lhs",["346"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'io' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'path'. Either include it or remove the dependency array.","ArrayExpression",["347"],"'Row' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'assignIcon' is defined but never used.","'secndIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'callAllScreenApi'. Either include it or remove the dependency array.",["348"],"'response' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getScreenCode' and 'id'. Either include them or remove the dependency array.",["349"],"'Badge' is defined but never used.","'Dropdown' is defined but never used.","'tagCloseIcon' is defined but never used.","'Link' is defined but never used.","'PerfectScrollbar' is defined but never used.","'avatar' is defined but never used.","'onFullScreen' is assigned a value but never used.","'emptyMediaImg' is defined but never used.","'nameAvatar' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'downArrow' is defined but never used.","'menuIcon' is defined but never used.","'defaultComparisonIcon' is defined but never used.","'deleteIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},"Update the dependencies array to be: [dispatch, path, props.history]",{"range":"356","text":"357"},"Update the dependencies array to be: [callAllScreenApi]",{"range":"358","text":"359"},"Update the dependencies array to be: [getScreenCode, id]",{"range":"360","text":"361"},[1381,1406],"[dispatch, path, props.history]",[1649,1651],"[callAllScreenApi]",[2028,2030],"[getScreenCode, id]"]