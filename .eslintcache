[{"D:\\project\\trendy\\src\\index.js":"1","D:\\project\\trendy\\src\\reportWebVitals.js":"2","D:\\project\\trendy\\src\\App.js":"3","D:\\project\\trendy\\src\\store\\store.js":"4","D:\\project\\trendy\\src\\context\\ThemeContext.js":"5","D:\\project\\trendy\\src\\services\\AuthService.js":"6","D:\\project\\trendy\\src\\store\\selectors\\AuthSelectors.js":"7","D:\\project\\trendy\\src\\jsx\\pages\\Registration.js":"8","D:\\project\\trendy\\src\\jsx\\pages\\Login.js":"9","D:\\project\\trendy\\src\\jsx\\pages\\ForgotPassword.js":"10","D:\\project\\trendy\\src\\store\\reducers\\Reducers.js":"11","D:\\project\\trendy\\src\\store\\reducers\\AuthReducer.js":"12","D:\\project\\trendy\\src\\store\\reducers\\PostsReducer.js":"13","D:\\project\\trendy\\src\\jsx\\index.jsx":"14","D:\\project\\trendy\\src\\store\\actions\\PostTypes.js":"15","D:\\project\\trendy\\src\\store\\actions\\AuthActions.js":"16","D:\\project\\trendy\\src\\jsx\\layouts\\Footer.js":"17","D:\\project\\trendy\\src\\jsx\\layouts\\ScrollToTop.js":"18","D:\\project\\trendy\\src\\utils\\api.js":"19","D:\\project\\trendy\\src\\jsx\\layouts\\nav\\index.js":"20","D:\\project\\trendy\\src\\jsx\\components\\media\\index.jsx":"21","D:\\project\\trendy\\src\\jsx\\components\\screen\\index.jsx":"22","D:\\project\\trendy\\src\\jsx\\components\\settings\\index.jsx":"23","D:\\project\\trendy\\src\\jsx\\components\\web-player\\index.jsx":"24","D:\\project\\trendy\\src\\jsx\\layouts\\nav\\Header.js":"25","D:\\project\\trendy\\src\\jsx\\layouts\\ChatBox.js":"26","D:\\project\\trendy\\src\\jsx\\layouts\\nav\\NavHader.js":"27","D:\\project\\trendy\\src\\jsx\\layouts\\nav\\SideBar.js":"28","D:\\project\\trendy\\src\\jsx\\components\\settings\\defaultComposition.jsx":"29","D:\\project\\trendy\\src\\jsx\\modals\\AddScreenModal.jsx":"30","D:\\project\\trendy\\src\\jsx\\modals\\UploadMediaFileModal.jsx":"31","D:\\project\\trendy\\src\\jsx\\modals\\FilterModal.jsx":"32","D:\\project\\trendy\\src\\jsx\\layouts\\nav\\Logout.js":"33","D:\\project\\trendy\\src\\jsx\\components\\chatBox\\Alerts.js":"34","D:\\project\\trendy\\src\\jsx\\components\\chatBox\\Notes.js":"35","D:\\project\\trendy\\src\\jsx\\components\\chatBox\\Chat.js":"36","D:\\project\\trendy\\src\\utils\\fetchClient.js":"37","D:\\project\\trendy\\src\\jsx\\components\\screen\\listScreens.jsx":"38","D:\\project\\trendy\\src\\jsx\\components\\media\\listMedia.jsx":"39","D:\\project\\trendy\\src\\jsx\\components\\media\\fileUploadWithPreview.jsx":"40","D:\\project\\trendy\\src\\jsx\\components\\screen\\tagInputField.jsx":"41","D:\\project\\trendy\\src\\jsx\\components\\chatBox\\MsgBox.js":"42","D:\\project\\trendy\\src\\utils\\UtilsService.js":"43","D:\\project\\trendy\\src\\jsx\\modals\\DeleteConfirmation.jsx":"44","D:\\project\\trendy\\src\\jsx\\modals\\AddNewTagModal.jsx":"45","D:\\project\\trendy\\src\\jsx\\modals\\PublishMediaModal.jsx":"46"},{"size":875,"mtime":1680691314925,"results":"47","hashOfConfig":"48"},{"size":375,"mtime":1680691314995,"results":"49","hashOfConfig":"48"},{"size":2564,"mtime":1681358732591,"results":"50","hashOfConfig":"48"},{"size":753,"mtime":1680691376597,"results":"51","hashOfConfig":"48"},{"size":1906,"mtime":1680691315069,"results":"52","hashOfConfig":"48"},{"size":2508,"mtime":1681466156616,"results":"53","hashOfConfig":"48"},{"size":122,"mtime":1681466156616,"results":"54","hashOfConfig":"48"},{"size":5838,"mtime":1680935689280,"results":"55","hashOfConfig":"48"},{"size":7446,"mtime":1680935689244,"results":"56","hashOfConfig":"48"},{"size":2091,"mtime":1680935689143,"results":"57","hashOfConfig":"48"},{"size":1054,"mtime":1680691376822,"results":"58","hashOfConfig":"48"},{"size":1799,"mtime":1680691376748,"results":"59","hashOfConfig":"48"},{"size":1666,"mtime":1680691376798,"results":"60","hashOfConfig":"48"},{"size":2472,"mtime":1681466156616,"results":"61","hashOfConfig":"48"},{"size":503,"mtime":1680691376719,"results":"62","hashOfConfig":"48"},{"size":2659,"mtime":1681466156616,"results":"63","hashOfConfig":"48"},{"size":431,"mtime":1680935688699,"results":"64","hashOfConfig":"48"},{"size":256,"mtime":1680935688744,"results":"65","hashOfConfig":"48"},{"size":1950,"mtime":1681968282643,"results":"66","hashOfConfig":"48"},{"size":983,"mtime":1680935688792,"results":"67","hashOfConfig":"48"},{"size":4295,"mtime":1681466809696,"results":"68","hashOfConfig":"48"},{"size":2397,"mtime":1681466156601,"results":"69","hashOfConfig":"48"},{"size":1598,"mtime":1681466156601,"results":"70","hashOfConfig":"48"},{"size":5123,"mtime":1681970477119,"results":"71","hashOfConfig":"48"},{"size":3776,"mtime":1680935688767,"results":"72","hashOfConfig":"48"},{"size":2328,"mtime":1680935688655,"results":"73","hashOfConfig":"48"},{"size":863,"mtime":1680935688838,"results":"74","hashOfConfig":"48"},{"size":5155,"mtime":1681466156616,"results":"75","hashOfConfig":"48"},{"size":2260,"mtime":1681466156601,"results":"76","hashOfConfig":"48"},{"size":10400,"mtime":1681620600800,"results":"77","hashOfConfig":"48"},{"size":2499,"mtime":1681641590433,"results":"78","hashOfConfig":"48"},{"size":3413,"mtime":1680936841422,"results":"79","hashOfConfig":"48"},{"size":1250,"mtime":1680937461994,"results":"80","hashOfConfig":"48"},{"size":5894,"mtime":1680935688484,"results":"81","hashOfConfig":"48"},{"size":5948,"mtime":1680935688585,"results":"82","hashOfConfig":"48"},{"size":12953,"mtime":1680935688528,"results":"83","hashOfConfig":"48"},{"size":810,"mtime":1681466156616,"results":"84","hashOfConfig":"48"},{"size":7826,"mtime":1681466179942,"results":"85","hashOfConfig":"48"},{"size":7756,"mtime":1681962141821,"results":"86","hashOfConfig":"48"},{"size":1782,"mtime":1681641611948,"results":"87","hashOfConfig":"48"},{"size":1756,"mtime":1681466156601,"results":"88","hashOfConfig":"48"},{"size":12988,"mtime":1680935688556,"results":"89","hashOfConfig":"48"},{"size":3769,"mtime":1681466156616,"results":"90","hashOfConfig":"48"},{"size":951,"mtime":1681466156616,"results":"91","hashOfConfig":"48"},{"size":2455,"mtime":1681466156616,"results":"92","hashOfConfig":"48"},{"size":5627,"mtime":1681970819654,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"1up7zwl",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"96"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"96"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"96"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"96"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"96"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199"},"D:\\project\\trendy\\src\\index.js",[],["200","201"],"D:\\project\\trendy\\src\\reportWebVitals.js",[],"D:\\project\\trendy\\src\\App.js",[],"D:\\project\\trendy\\src\\store\\store.js",[],"D:\\project\\trendy\\src\\context\\ThemeContext.js",[],"D:\\project\\trendy\\src\\services\\AuthService.js",[],"D:\\project\\trendy\\src\\store\\selectors\\AuthSelectors.js",[],"D:\\project\\trendy\\src\\jsx\\pages\\Registration.js",[],"D:\\project\\trendy\\src\\jsx\\pages\\Login.js",["202","203","204"],"import React, { useState } from 'react'\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { loadingToggleAction,loginAction,\r\n} from '../../store/actions/AuthActions';\r\nimport { Row, Col, Card,  Tab, Nav, Button } from 'react-bootstrap'\r\n//\r\nimport logo from '../../img/logo.png'\r\nimport eyeOff from '../../img/eye-off.svg'\r\nimport googleIcon from '../../img/google-icon.png'\r\n\r\nfunction Login (props) {\r\n    const [email, setEmail] = useState('demo@example.com');\r\n    let errorsObj = { email: '', password: '' };\r\n    const [errors, setErrors] = useState(errorsObj);\r\n    const [password, setPassword] = useState('123456');\r\n    const dispatch = useDispatch();\r\n\r\n    function onLogin(e) {\r\n        e.preventDefault();\r\n        let error = false;\r\n        const errorObj = { ...errorsObj };\r\n        if (email === '') {\r\n            errorObj.email = 'Email is Required';\r\n            error = true;\r\n        }\r\n        if (password === '') {\r\n            errorObj.password = 'Password is Required';\r\n            error = true;\r\n        }\r\n        setErrors(errorObj);\r\n        if (error) {\r\n\t\t\treturn ;\r\n\t\t}\r\n\t\tdispatch(loadingToggleAction(true));\t\r\n        dispatch(loginAction(email, password, props.history));\r\n    }\r\n\r\n\r\n\tconst tabData = [\r\n\t\t{\r\n\t\t  name: 'Sign in',\r\n\t\t  content:\t<div>\r\n\t\t  <div className=\"mb-4\">\r\n\t\t\t  <h3 className=\"mb-1 font-w600\">Welcome Back</h3>\r\n\t\t\t  <p className=\"welcome-content-paragraph\">Log in with your data that you entered during your registration</p>\r\n\t\t  </div>\r\n\t\t  {props.errorMessage && (\r\n\t\t\t  <div className='bg-red-300 text-red-900 border border-red-900 p-1 my-2'>\r\n\t\t\t\t  {props.errorMessage}\r\n\t\t\t  </div>\r\n\t\t  )}\r\n\t\t  {props.successMessage && (\r\n\t\t\t  <div className='bg-green-300 text-green-900 border border-green-900 p-1 my-2'>\r\n\t\t\t\t  {props.successMessage}\r\n\t\t\t  </div>\r\n\t\t  )}\r\n\t\t  <form onSubmit={onLogin}>\r\n\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t  <input type=\"email\" className=\"form-control\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n\t\t\t\t  {errors.email && <div className=\"text-danger fs-12\">{errors.email}</div>}\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"form-group password-textfield\">\r\n\t\t\t\t  <input type=\"password\" className=\"form-control\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n\t\t\t  <span className='eye-off'><img src={eyeOff} alt=\"\" className=\"eye-off\"/> </span>\r\n\t\t\t\t  {errors.password && <div className=\"text-danger fs-12\">{errors.password}</div>}\r\n\t\t\t  </div>\r\n\t\t\t  <div className='recover-password d-flex justify-content-end'>\r\n\t\t\t\t  <Link  className='revover-password'  to=\"./page-register\">Recover Password ?</Link>\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"text-center\">\r\n\t\t\t\t  <button type=\"submit\" className=\"btn btn-primary btn-block btn-pink\">Sign In</button>\r\n\t\t\t  </div>\r\n\t\t  </form>\r\n\t\t  <div className=\"new-account add-new-account  text-center mt-2\">\r\n\t\t\t  <p className=\"mb-0\">Don't have an account?{\" \"}\r\n\t\t\t\t  <Link className=\"signup-link\" to=\"./page-register\">Sign up</Link>\r\n\t\t\t  </p>\r\n\t\t  </div>\r\n\r\n\t\t  <Button className='btn-google-signin' variant='outline-primary'>\r\n\t\t  <img src={googleIcon} alt=\"\" className=\"logo-icon mr-2\"/> <span>Sign in with Google</span>\r\n\t\t  </Button>\r\n\t\t  </div>\r\n\r\n\t\t},\r\n\t\t{\r\n\t\t  name: 'Register',\r\n\t\t  content:<div>\r\n\t\t  <div className=\"mb-4\">\r\n\t\t\t  <h3 className=\"mb-1 font-w600\">Let’s get Started</h3>\r\n\t\t\t  <p className=\"welcome-content-paragraph\">Enter your basic information to create new account on Trendyy</p>\r\n\t\t  </div>\r\n\t\t  {props.errorMessage && (\r\n\t\t\t  <div className='bg-red-300 text-red-900 border border-red-900 p-1 my-2'>\r\n\t\t\t\t  {props.errorMessage}\r\n\t\t\t  </div>\r\n\t\t  )}\r\n\t\t  {props.successMessage && (\r\n\t\t\t  <div className='bg-green-300 text-green-900 border border-green-900 p-1 my-2'>\r\n\t\t\t\t  {props.successMessage}\r\n\t\t\t  </div>\r\n\t\t  )}\r\n\t\t  <form onSubmit={onLogin}>\r\n\t\t  <div className=\"form-group\">\r\n\t\t\t\t  <input type=\"text\" className=\"form-control\" placeholder='Enter Name' value='Enter Name'/>\r\n\t\t\t\t  {/* {errors.email && <div className=\"text-danger fs-12\">{errors.email}</div>} */}\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t  <input type=\"email\" className=\"form-control\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n\t\t\t\t  {errors.email && <div className=\"text-danger fs-12\">{errors.email}</div>}\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"form-group\">\r\n\t\t\t\t  <input type=\"phone\" className=\"form-control\" placeholder='Phone Number' value='Phone Number'/>\r\n\t\t\t\t  {/* {errors.email && <div className=\"text-danger fs-12\">{errors.email}</div>} */}\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"form-group password-textfield\">\r\n\t\t\t\t  <input type=\"password\" className=\"form-control\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n\t\t\t  <span className='eye-off'><img src={eyeOff} alt=\"\" className=\"eye-off\"/> </span>\r\n\t\t\t\t  {errors.password && <div className=\"text-danger fs-12\">{errors.password}</div>}\r\n\t\t\t  </div>\r\n\t\t\t  <div className=\"text-center\">\r\n\t\t\t\t  <button type=\"submit\" className=\"btn btn-primary btn-block btn-pink\">Register</button>\r\n\t\t\t  </div>\r\n\t\t  </form>\r\n\t\t  <div className=\"new-account add-new-account  text-center mt-2\">\r\n\t\t\t  <p className=\"mb-0\">Already have an account?{\" \"}\r\n\t\t\t\t  <Link className=\"signup-link\" to=\"./page-register\">Sign in</Link>\r\n\t\t\t  </p>\r\n\t\t  </div>\r\n\t\t  </div>\r\n\t\t},\r\n\r\n\t\r\n\t  ]\r\n  return (\r\n  \r\n\t\t<div className=\"login-form-bx auth-page\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-lg-8 col-md-7 d-flex box-skew1 relative login-leftpanel\">\r\n\t\t\t\t\t\t<div className=\"inner-content align-self-center\">\r\n\t\t\t\t\t\t\t<Link to=\"/dashboard\" className=\"login-logo\">\r\n\t\t\t\t\t\t\t\t<img src={logo} alt=\"\" className=\"logo-icon mr-2\"/>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t<h2 className=\"m-b10 text-white\">Sign In to <br/> Trendyy Website</h2>\r\n\t\t\t\t\t\t\t<p className=\"m-b40 text-white\">Boost your engagement & productivity, streamline processes, and make faster communications.</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='login-center-img'>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-lg-4 col-md-5 box-skew d-flex pl-0 pr-0 login-rightpanel\">\r\n\t\t\t\t\t\t<div className=\"authincation-content\">\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Tab.Container defaultActiveKey={tabData[0].name.toLowerCase()}>\r\n                <Nav as='ul' className='nav-pills light'>\r\n\t\t\t\t{tabData.map((data, i) => (\r\n                      <Nav.Item as='li' key={i}>\r\n                        <Nav.Link eventKey={data.name.toLowerCase()}>\r\n                          <i className={`la la-${data.icon} mr-2`} />\r\n                          {data.name}\r\n                        </Nav.Link>\r\n                      </Nav.Item>\r\n                    ))}\r\n                </Nav>\r\n                <Tab.Content className='auth-tab-content'>\r\n\t\t\t\t{tabData.map((data, i) => (\r\n                        <Tab.Pane eventKey={data.name.toLowerCase()} key={i}>\r\n\t\t\t\t\t\t\t<div>{data.content}</div>\r\n\t\t\t\t\t\t\r\n                         \r\n                        </Tab.Pane> \r\n                      )\r\n                  )}\r\n                </Tab.Content>\r\n              </Tab.Container>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        errorMessage: state.auth.errorMessage,\r\n        successMessage: state.auth.successMessage,\r\n        showLoading: state.auth.showLoading,\r\n    };\r\n};\r\nexport default connect(mapStateToProps)(Login);","D:\\project\\trendy\\src\\jsx\\pages\\ForgotPassword.js",[],"D:\\project\\trendy\\src\\store\\reducers\\Reducers.js",[],"D:\\project\\trendy\\src\\store\\reducers\\AuthReducer.js",[],"D:\\project\\trendy\\src\\store\\reducers\\PostsReducer.js",[],"D:\\project\\trendy\\src\\jsx\\index.jsx",[],"D:\\project\\trendy\\src\\store\\actions\\PostTypes.js",[],"D:\\project\\trendy\\src\\store\\actions\\AuthActions.js",[],"D:\\project\\trendy\\src\\jsx\\layouts\\Footer.js",[],"D:\\project\\trendy\\src\\jsx\\layouts\\ScrollToTop.js",[],"D:\\project\\trendy\\src\\utils\\api.js",["205","206"],"import fetchClient from \"./fetchClient\";\r\n\r\nexport const BASE_URL = \"http://144.126.143.140:5000\";\r\n\r\nexport function login(email, password) {\r\n  const role = \"vendor\";\r\n  const postData = {\r\n    email,\r\n    password,\r\n    role,\r\n  };\r\n\r\n  return fetchClient.post(`${BASE_URL}/vendor/auth/login`, postData);\r\n}\r\n\r\nexport async function getAllScreens() {\r\n  const response = await fetchClient.get(BASE_URL + `/vendor/display/screen`);\r\n  return response.data.data;\r\n}\r\n\r\nexport async function getAllMedia() {\r\n  const response = await fetchClient.get(BASE_URL + `/vendor/display/media`);\r\n  return response.data.data.media;\r\n}\r\n\r\nexport function addScreen(data) {\r\n  return fetchClient.post(`${BASE_URL}/vendor/display/screen`, data);\r\n}\r\n\r\nexport async function addScreenCode(deviceToken) {\r\n  const postData = {\r\n    deviceToken: deviceToken,\r\n  };\r\n  const response = await fetchClient.post(`${BASE_URL}/device/auth`, postData);\r\n  return response.data.data;\r\n}\r\n\r\nexport async function validateScreenCode(code) {\r\n  const postData = {\r\n    code: code,\r\n  };\r\n\r\n  try {\r\n    const response = await fetchClient.post(\r\n      `${BASE_URL}/vendor/display/deviceCode`,\r\n      postData\r\n    );\r\n    return response.data.statusCode === 200;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function addMedia(formData) {\r\n  const response = await fetchClient.post(\r\n    `${BASE_URL}/vendor/display/media`,\r\n    formData,\r\n    {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    }\r\n  );\r\n}\r\nexport async function deleteMedia(id) {\r\n  const response = await fetchClient.delete(\r\n    `${BASE_URL}/vendor/display/media?mediaId=${id}`\r\n  );\r\n}\r\n\r\nexport async function publishMedia(postData) {\r\n\r\n  try {\r\n    const response = await fetchClient.post(\r\n      `${BASE_URL}/vendor/display/publish`,\r\n      postData\r\n    );\r\n    return response.data.statusCode === 200;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n}\r\n","D:\\project\\trendy\\src\\jsx\\layouts\\nav\\index.js",[],"D:\\project\\trendy\\src\\jsx\\components\\media\\index.jsx",["207"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Dropdown } from \"react-bootstrap\";\r\nimport ListMedia from \"./listMedia\";\r\nimport FilterModal from \"../../modals/FilterModal\";\r\nimport UploadMediaModal from \"../../modals/UploadMediaFileModal\";\r\nimport searchIcon from \"../../../img/search.png\";\r\nimport listIcon from \"../../../img/list-icon.png\";\r\nimport uploadIcon from \"../../../img/upload-icon.png\";\r\nimport canvaIcon from \"../../../img/canva-icon.png\";\r\nimport { deleteMedia, getAllMedia } from \"../../../utils/api\";\r\n\r\nconst Media = () => {\r\n  const [showFilterModal, setFilterModal] = useState(false);\r\n  const [showUploadMediaModal, setUploadMediaModal] = useState(false);\r\n  const [allMedia, setAllMedia] = useState(\"\");\r\n  // use effect\r\n  useEffect(() => {\r\n    callAllMediaApi();\r\n  }, []);\r\n  const callAllMediaApi = async () => {\r\n    const list = await getAllMedia();\r\n    setAllMedia(list);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"custom-content-heading d-flex flex-wrap\">\r\n        <h1>Assets</h1>\r\n      </div>\r\n      <div className=\"form-head d-flex mb-3 align-items-start\">\r\n        <Dropdown className=\"dropdown-toggle-menu\">\r\n          <Dropdown.Toggle\r\n            variant=\"\"\r\n            className=\"mb-2 d-flex align-items-center justify-content-center add-media-btn\"\r\n          >\r\n            <span className=\"addmedia-btn-text\">Add Media</span>\r\n            <span className=\"btn-icon-right d-flex align-items-center justify-content-center\">\r\n              <div class=\"glyph-icon flaticon-381-add-1\"></div>\r\n            </span>\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item href=\"#\" className=\"dropdown-list-item\"onClick={() => {\r\n            setUploadMediaModal(true);\r\n          }}>\r\n              <div className=\"d-flex\">\r\n                <div className=\"dropdown-list-icon\">\r\n                  <img\r\n                    className=\"dropdown-list-img img-fluid\"\r\n                    src={uploadIcon}\r\n                    alt=\"menu-icon\"\r\n                  />\r\n                </div>\r\n                <div className=\"dropdown-menu-list\">\r\n                  <span className=\"menu-heading\">Upload Files</span>\r\n                  <span className=\"menu-description\">\r\n                    Get to know more about screen info\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </Dropdown.Item>\r\n            <Dropdown.Item href=\"#\" className=\"dropdown-list-item\">\r\n              <div className=\"d-flex\">\r\n                <div className=\"dropdown-list-icon\">\r\n                  <img\r\n                    className=\"dropdown-list-img img-fluid\"\r\n                    src={canvaIcon}\r\n                    alt=\"menu-icon\"\r\n                  />\r\n                </div>\r\n                <div className=\"dropdown-menu-list\">\r\n                  <span className=\"menu-heading\">Canva</span>\r\n                  <span className=\"menu-description\">\r\n                    Get to know more about screen info\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n\r\n        <div className=\"search-textfield ml-auto d-flex flex-wrap align-items-center\">\r\n          <div className=\"form-group mb-0\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control input-default \"\r\n              placeholder=\"Search...\"\r\n            />\r\n            <img className=\"search-icon\" src={searchIcon} alt=\"search\" />\r\n          </div>\r\n          <Button\r\n            className=\"ml-2 icon-btn\"\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              setFilterModal(true);\r\n            }}\r\n          >\r\n            <img className=\"icon-icon\" src={listIcon} alt=\"list-icon\" />\r\n          </Button>\r\n        </div>\r\n        <FilterModal\r\n          showFilterModal={showFilterModal}\r\n          setFilterModal={setFilterModal}\r\n        />\r\n         <UploadMediaModal\r\n          showUploadMediaModal={showUploadMediaModal}\r\n          setUploadMediaModal={setUploadMediaModal}\r\n          callAllMediaApi={callAllMediaApi}\r\n        />\r\n      </div>\r\n      <ListMedia allMedia={allMedia}  callAllMediaApi={callAllMediaApi}/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Media;\r\n","D:\\project\\trendy\\src\\jsx\\components\\screen\\index.jsx",[],"D:\\project\\trendy\\src\\jsx\\components\\settings\\index.jsx",["208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223"],"import React, { useState } from \"react\";\r\nimport { Button, Col, Dropdown } from \"react-bootstrap\";\r\nimport ListMedia from \"./defaultComposition\";\r\nimport AddScreenModal from \"../../modals/AddScreenModal\";\r\nimport FilterModal from \"../../modals/FilterModal\";\r\nimport UploadMediaModal from \"../../modals/UploadMediaFileModal\";\r\nimport addImg from \"../../../img/add-icon.png\";\r\nimport searchIcon from \"../../../img/search.png\";\r\nimport listIcon from \"../../../img/list-icon.png\";\r\nimport uploadIcon from \"../../../img/upload-icon.png\";\r\nimport canvaIcon from \"../../../img/canva-icon.png\";\r\n\r\nconst Settings = () => {\r\n  const [showScreenModal, setShowScreenModal] = useState(false);\r\n  const [showFilterModal, setFilterModal] = useState(false);\r\n  const [showUploadMediaModal, setUploadMediaModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"custom-content-heading d-flex flex-wrap\">\r\n        <h1>Settings</h1>\r\n        <div className=\" ml-auto d-flex flex-wrap align-items-center\">\r\n                  <Dropdown>\r\n                    <Dropdown.Toggle\r\n                      variant='outline-primary'\r\n                      size='sm'\r\n                      className='mt-1 mb-2'\r\n                    >\r\n                      Default Content\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                      <Dropdown.Item href='#'>Default Content</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                  </Dropdown>\r\n                </div>\r\n      </div>\r\n      \r\n      <ListMedia />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","D:\\project\\trendy\\src\\jsx\\components\\web-player\\index.jsx",["224"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { addScreenCode, BASE_URL } from \"../../../utils/api\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport webPlayerImg from \"../../../img/web-player-bg.png\";\r\n\r\nconst Webplayer = () => {\r\n  const [content, setContent] = useState(\"\");\r\n  const divRef = useRef(null);\r\n\r\n  const location = useLocation();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const id = searchParams.get(\"id\");\r\n  const getScreenCode = async () => {\r\n    const getContent = await addScreenCode(id);\r\n    setContent(getContent);\r\n  };\r\n  const defaultMediaUrl = `${BASE_URL}/default/file_1681896290177.png`;\r\n  useEffect(() => {\r\n    getScreenCode();\r\n  }, []);\r\n  const onFullScreen = () => {\r\n    if (divRef.current) {\r\n      // divRef.current.requestFullscreen();\r\n\r\n      if (divRef.current.requestFullscreen) {\r\n        divRef.current.requestFullscreen();\r\n      } else if (divRef.current.webkitRequestFullscreen) {\r\n        divRef.current.webkitRequestFullscreen();\r\n      } else if (divRef.current.msRequestFullscreen) {\r\n        divRef.current.msRequestFullscreen();\r\n      }\r\n    }\r\n  };\r\n\r\n  if(content === \"\") return (<>loading</>)\r\n  let type = content?.content.length  ? content?.content[0].media.type : \"code\"\r\n  if(content.isVerified && type === \"code\"){\r\n    type = \"default_media\"\r\n  }\r\n\r\n\r\n\r\nconsole.log(type)\r\n  return (\r\n    <Col xl=\"12\">\r\n      <div>\r\n        <div>\r\n          <div>\r\n            {\" \"}\r\n            <button id=\"Fullscreen\" onClick={() => onFullScreen()}>\r\n              <div class=\"full-text\">\r\n                <div class=\"sec-block\">\r\n                  {\" \"}\r\n                  <i class=\"fa fa-expand\"></i>\r\n                  <p>View Full Screen</p>\r\n                </div>\r\n              </div>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div ref={divRef}>\r\n          {type === \"code\" && (\r\n            <div className=\"basic-list-group \" >\r\n              <div className=\"main-block\">\r\n                <div className=\"registration-block\">\r\n                  <p className=\"registration-title\">\r\n                    Screen Registration Code{\" \"}\r\n                  </p>\r\n                  <p className=\"code\">{content.deviceCode}</p>\r\n                </div>\r\n              </div>\r\n              <div className=\"webrowerTextSection\">\r\n                <div className=\"how-to-register\">\r\n                  How to register this screen ?\r\n                </div>\r\n                <div className=\"guidelines-login\">\r\n                  1. Login to{\" \"}\r\n                  <Link>\r\n                    <span className=\"white-color\">console.pickcel.com</span>\r\n                  </Link>{\" \"}\r\n                  on your internet browser{\" \"}\r\n                </div>\r\n                <div className=\"guidelines-login\">\r\n                  2. Go to 'Screen' section &gt; Click on{\" \"}\r\n                  <Link>\r\n                    <span className=\"white-color\">'+Add Screen</span>'\r\n                  </Link>{\" \"}\r\n                  &gt; Enter above{\" \"}\r\n                  <Link>\r\n                    <span className=\"white-color\">\r\n                      Screen Registration Code\r\n                    </span>\r\n                  </Link>{\" \"}\r\n                  &gt; Click on{\" \"}\r\n                  <Link>\r\n                    <span className=\"white-color\">'Next'</span>\r\n                  </Link>\r\n                </div>\r\n\r\n                <div className=\"guidelines-login\">\r\n                  3. Enter screen name and other details &gt; Click on\r\n                  <Link>\r\n                    <span className=\"white-color\"> 'Register Screen'</span>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {type === \"image\" && (\r\n            <div className=\"basic-list-group image-preview-container media-content\">\r\n              <img\r\n                className=\"webplayer-preview-img\"\r\n                src={webPlayerImg}\r\n                alt=\"media-img\"\r\n              />\r\n            </div>\r\n          )}\r\n          {type === \"video\" && (\r\n            <div className=\"basic-list-group video-container media-content\">\r\n              <iframe\r\n                title=\"video\"\r\n                width=\"100%\"\r\n                height=\"440px\"\r\n                src={`${BASE_URL}${content?.content[0].media.title}`}\r\n              ></iframe>\r\n            </div>\r\n          )}\r\n          {type === \"default_media\" && (\r\n            <div className=\"basic-list-group image-preview-container media-content\">\r\n              <img\r\n                className=\"webplayer-preview-img\"\r\n                src={defaultMediaUrl}\r\n                alt=\"media-img\"\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div class=\"console-reg\" id=\"consoleReg\">\r\n            <p>\r\n              Copy paste above Screen Registration Code in console{\" \"}\r\n              <em class=\"ti-arrow-circle-up\"></em>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Webplayer;\r\n","D:\\project\\trendy\\src\\jsx\\layouts\\nav\\Header.js",["225","226","227"],"import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n/// Scroll\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\n\r\n/// Image\r\nimport profile from \"../../../images/profile/pic1.jpg\";\r\nimport avatar from \"../../../images/avatar/1.jpg\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport LogoutPage from './Logout';\r\n\r\nconst Header = ({ onNote }) => {\r\n  const onFullScreen = () => {\r\n    var elem = document.documentElement;\r\n    if (elem.requestFullscreen) {\r\n      elem.requestFullscreen();\r\n    } else if (elem.webkitRequestFullscreen) {\r\n      elem.webkitRequestFullscreen();\r\n    } else if (elem.msRequestFullscreen) {\r\n      elem.msRequestFullscreen();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"header header-custom\" style={{ zIndex: \"11\" }}>\r\n      <div className=\"header-content\">\r\n        <nav className=\"navbar navbar-expand\">\r\n          <div className=\"collapse navbar-collapse justify-content-between\">\r\n            <div className=\"header-left\">\r\n\r\n            </div>\r\n            <ul className=\"navbar-nav header-right\">\r\n\r\n              <Dropdown as=\"li\" className=\"nav-item dropdown header-profile\">\r\n                <Dropdown.Toggle\r\n                  variant=\"\"\r\n                  as=\"a\"\r\n                  className=\"i-false c-pointer nav-link\"\r\n                  to=\"\"\r\n                  role=\"button\"\r\n                  data-toggle=\"dropdown\"\r\n                >\r\n                  <div className=\"header-info\">\r\n                    <span>\r\n                      Hello, <strong>Samuel</strong>\r\n                    </span>\r\n                  </div>\r\n                  <img src={profile} width={20} alt=\"\" />\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu\r\n                  align=\"right\"\r\n                  className=\"dropdown-menu dropdown-menu-right\"\r\n                >\r\n                  <Link to=\"/app-profile\" className=\"dropdown-item ai-icon\">\r\n                    <svg\r\n                      id=\"icon-user1\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"text-primary\"\r\n                      width={18}\r\n                      height={18}\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth={2}\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    >\r\n                      <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\r\n                      <circle cx={12} cy={7} r={4} />\r\n                    </svg>\r\n                    <span className=\"ml-2\">Profile </span>\r\n                  </Link>\r\n                  <Link to=\"/email-inbox\" className=\"dropdown-item ai-icon\">\r\n                    <svg\r\n                      id=\"icon-inbox\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"text-success\"\r\n                      width={18}\r\n                      height={18}\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth={2}\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    >\r\n                      <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\" />\r\n                      <polyline points=\"22,6 12,13 2,6\" />\r\n                    </svg>\r\n                    <span className=\"ml-2\">Inbox </span>\r\n                  </Link>\r\n                  <LogoutPage />\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\project\\trendy\\src\\jsx\\layouts\\ChatBox.js",[],"D:\\project\\trendy\\src\\jsx\\layouts\\nav\\NavHader.js",[],"D:\\project\\trendy\\src\\jsx\\layouts\\nav\\SideBar.js",[],"D:\\project\\trendy\\src\\jsx\\components\\settings\\defaultComposition.jsx",["228","229","230","231","232","233","234"],"import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Card, Button } from \"react-bootstrap\";\r\nimport emptyMediaImg from \"../../../images/card/1.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst DefaultComposition = () => {\r\n  const [test, settest] = useState(false);\r\n  const [showNewTagModal, setNewTagModal] = useState(false);\r\n  // use effect\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      settest(true);\r\n    }, 2000);\r\n  }, [test]);\r\n  const chackbox = document.querySelectorAll(\".custom-checkbox input\");\r\n  const motherChackBox = document.querySelector(\"#checkbox1_exam_all\");\r\n  const chackboxFun = (type) => {\r\n    for (let i = 0; i < chackbox.length; i++) {\r\n      const element = chackbox[i];\r\n      if (type === \"all\") {\r\n        if (motherChackBox.checked) {\r\n          element.checked = true;\r\n        } else {\r\n          element.checked = false;\r\n        }\r\n      } else {\r\n        if (!element.checked) {\r\n          motherChackBox.checked = false;\r\n          break;\r\n        } else {\r\n          motherChackBox.checked = true;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row settings-default\">\r\n        <Col xl=\"6\">\r\n          <div className=\"default-composition-preview\">\r\n            <div className=\"thumbnail\">\r\n              <img className=\"imgContent\" src={emptyMediaImg} alt=\"Card cap\" />\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col xl=\"6\">\r\n          <div className=\"mb-4\">\r\n            <h4 className=\"card-title card-intro-title\">\r\n              Organisation default composition\r\n            </h4>\r\n            <p>\r\n              The composition will be applied to all newly added displays in the\r\n              organization\r\n            </p>\r\n            <p className=\"font-weight-bold\">\r\n            Default Composition:\r\n            Screenshot 2 - Composition \r\n            <span className='btn-icon-right text-info'>\r\n                    <i className='fa fa-pencil' />\r\n                  </span>\r\n            </p>\r\n            <p className=\"font-weight-bold\">\r\n            Duration:\r\n            10 seconds\r\n            </p>\r\n            \r\n          </div>\r\n        </Col>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DefaultComposition;\r\n","D:\\project\\trendy\\src\\jsx\\modals\\AddScreenModal.jsx",["235"],"import { Button, Modal, Row, Col, Alert } from \"react-bootstrap\";\r\nimport cancelIcon from \"../../img/cancel-icon.png\";\r\nimport TagInputField from \"../components/screen/tagInputField\";\r\nimport { useState } from \"react\";\r\nimport DeviceBG from \"../../img/DeviceBG.png\";\r\nimport webScreen from \"../../img/webScreen.png\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { addScreen, validateScreenCode } from \"../../utils/api\";\r\n\r\nconst AddScreenModal = ({ setShowScreenModal, callAllScreenApi }) => {\r\n  const [step, setStep] = useState(1);\r\n  const [code, setCode] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [screenLocation, setScreenLocation] = useState(\"\");\r\n  const [googleLocation, setGoogleLocation] = useState(\"\");\r\n  const [tags, setTags] = useState([]);\r\n  const [codeError, setCodeError] = useState(false);\r\n  const [nameError, setNameError] = useState(false);\r\n  const [screenLocationError, setScreenLocationError] = useState(false);\r\n  const [googleLocationError, setGoogleLocationError] = useState(false);\r\n  const [showError, setShowError] = useState(\"\");\r\n\r\n  const handleCodeChange = (event) => {\r\n    setCode(event.target.value);\r\n  };\r\n\r\n  const saveScreen = async () => {\r\n    setShowError(\"\")\r\n    setCodeError(false)\r\n    setNameError(false)\r\n    setScreenLocationError(false)\r\n    setGoogleLocationError(false)\r\n    if (step === 1) {\r\n      if(code.trim().length === 0){\r\n        setCodeError(true)\r\n        return false;\r\n      }\r\n      const validateCode =  await validateScreenCode(code)\r\n      if(validateCode){\r\n        setStep(2);\r\n      } else {\r\n        setCodeError(true)\r\n        setShowError(\"Invalid registration code!\")\r\n      }\r\n      return;\r\n    }\r\n    if(step === 2){\r\n      let hassError = false\r\n      if(name.trim().length === 0){\r\n        setNameError(true)\r\n        hassError = true\r\n      }\r\n      if(screenLocation.trim().length === 0){\r\n        setScreenLocationError(true)\r\n        hassError = true\r\n      }\r\n      if(googleLocation.trim().length === 0){\r\n        setGoogleLocationError(true)\r\n        hassError = true\r\n      }\r\n      if(hassError) return false\r\n      const finalScreenData = {\r\n        code: code,\r\n        name: name,\r\n        screenLocation: screenLocation,\r\n        googleLocation: googleLocation,\r\n        ...(tags.length ? { tags: tags } : {})\r\n      };\r\n      await addScreen(finalScreenData);\r\n      await callAllScreenApi();\r\n      setShowScreenModal(false);\r\n      \r\n    }\r\n    if(step === 4){\r\n      window.open(`/web-player?id=${uuidv4()}`, '_blank');\r\n      setStep(1);\r\n      return;\r\n    }\r\n  };\r\n  return (\r\n    <Modal\r\n      className=\"fade bd-example-modal-lg custom-modal custom-modal-medium\"\r\n      show={true}\r\n      size=\"md\"\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title className={step === 3 ? \" font22\" : \"\"}>\r\n          {step === 1 && \"Register your screen\"}\r\n          {step === 2 && \"Add Screen\"}\r\n          {step === 3 && \"Try following if you don’t have display screen\"}\r\n          {step === 4 && \"Webplayer\"}\r\n        </Modal.Title>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={() => setShowScreenModal(false)}\r\n        >\r\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\r\n        </Button>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {step === 1 && (\r\n          <div>\r\n                <div className=\"image-container d-flex align-items-center justify-content-center flex-column mx-auto\">\r\n                  {/* <img className=\"devicebg\" src={DeviceBG} alt=\"upload-img\" /> */}\r\n                  <div className=\"image-container-content\">\r\n                  <div className=\"image-text\">Registration Code </div>\r\n                  <div className=\"image-text2\">******</div>\r\n                  </div>\r\n                \r\n                </div>\r\n            <div className=\"screenText\">\r\n              Enter the ‘Screen Registration Code’ as shown on your signage\r\n              screen\r\n            </div>\r\n              <div className=\"form-group enter-code-textfield\">\r\n                {/* <label>Enter Code</label> */}\r\n                <input\r\n                  value={code}\r\n                  type=\"text\"\r\n                  \r\n                  className={`${codeError ? 'invalid' : ''} form-control input-default form-field`}\r\n                  placeholder=\"Enter Code\"\r\n                  onChange={handleCodeChange}\r\n                />\r\n              </div>\r\n          </div>\r\n        )}\r\n        {step === 2 && (\r\n          <>\r\n            {\" \"}\r\n            <div className=\"add-screen-paragraph\">\r\n              <p>\r\n                Want to add new screen? Please fill in some information and\r\n                continue\r\n              </p>\r\n            </div>\r\n            <Row>\r\n              <Col lg={6} md={6} sm={6} xs={12}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    \r\n                    className={`${nameError ? 'invalid' : ''} form-control input-default form-field`}\r\n                    placeholder=\"Screen Name\"\r\n                    value={name}\r\n                    onChange={(event) => {\r\n                      setName(event.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col lg={6} md={6} sm={6} xs={12}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={`${screenLocationError ? 'invalid' : ''} form-control input-default form-field`}\r\n                    placeholder=\"Screen Location\"\r\n                    value={screenLocation}\r\n                    onChange={(event) => {\r\n                      setScreenLocation(event.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col lg={12} md={12} sm={12} xs={12}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={`${googleLocationError ? 'invalid' : ''} form-control input-default form-field`}\r\n                    placeholder=\"Google Location\"\r\n                    value={googleLocation}\r\n                    onChange={(event) => {\r\n                      setGoogleLocation(event.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col lg={12} md={12} sm={12} xs={12}>\r\n                <TagInputField tags={tags} setTags={setTags} />\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        )}\r\n        {step === 3 && (\r\n          <div className=\"webBrowserOptionSection w-100\" onClick={()=>{\r\n            setStep(4)\r\n          }}>\r\n            <Row className=\"w-100\">\r\n            <Col lg={6} md={6} sm={6} xs={12} className=\"d-flex align-items-center\">\r\n            <div className=\"try-card-img\">\r\n              <img className=\"browserImg\" src={webScreen} alt=\"web screen\" />\r\n            </div>\r\n              </Col>\r\n              <Col lg={6} md={6} sm={6} xs={12} className=\"d-flex align-items-center flex-wrap pl-0\">\r\n              <div className=\"try-card-info\">\r\n              <p className=\"tryBrowser\">Try browser based Webplayer</p>\r\n              <p className=\"tryBrowserText\">Works on all types of browsers <br/>(Ideal for quick start)</p>\r\n            </div>\r\n              </Col>\r\n            </Row>\r\n            \r\n         \r\n          </div>\r\n        )}\r\n        {step === 4 && (\r\n          <div>\r\n            {/* <div className=\"relative d-flex align-items-center justify-content-center flex-column\">\r\n              <div className=\"upload-flie-img\">\r\n                <div className=\"image-container\">\r\n                  <img className=\"devicebg\" src={DeviceBG} alt=\"upload-img\" />\r\n                  <div className=\"image-text\">Registration Code </div>\r\n                  <div className=\"image-text2\">ABDHSG</div>\r\n                </div>\r\n              </div>\r\n            </div> */}\r\n              <div className=\"image-container d-flex align-items-center justify-content-center flex-column mx-auto\">\r\n                  <div className=\"image-container-content\">\r\n                  <div className=\"image-text\">Registration Code </div>\r\n                  <div className=\"image-text2\">ABDHSG</div>\r\n                  </div>\r\n                \r\n                </div>\r\n                <div className=\"using-webplayer-paragraph\">\r\n                  <p>You are about to start using the webplayer</p>\r\n                </div>\r\n                <div className=\"webplayer-list\">\r\n                  <ul>\r\n                    <li>Please note, Webplayer is designed to give you the overall idea of how screens are registered using ‘Registration Code’</li>\r\n                  <li>Use this Webplayer to check how the content generated from console will appear on TV screens.</li>\r\n                  </ul>\r\n                </div>\r\n          </div>\r\n        )}\r\n      </Modal.Body>\r\n      {step !== 3 && (\r\n        <Modal.Footer>\r\n        {showError !== \"\" &&              <div className=\"errorSection\"> <Alert\r\n                  \r\n                  variant={\"danger\"}\r\n                  className='solid alert-dismissible fade show'\r\n                >\r\n                   {showError}\r\n                  \r\n                </Alert></div>}\r\n          <Button\r\n            variant=\"\"\r\n            type=\"button\"\r\n            className=\"btn btn-primary btn-block primary-btn mx-0 register-screen-modal\"\r\n            onClick={() => saveScreen()}\r\n          >\r\n            {step === 1 && \"Done\"}\r\n            {step === 2 && \"Add Screen\"}\r\n            {step === 4 && \"Okay\"}\r\n          </Button>\r\n          {step === 1 && (\r\n            <>\r\n              <div className=\"alternetTextSection\">\r\n                {\" \"}\r\n                <span>\r\n                  Don’t have a display screen that is ready to use yet?\r\n                </span>\r\n              </div>\r\n              <div className=\"alternetTextSection\">\r\n                <p\r\n                  onClick={() => {\r\n                    setStep(3);\r\n                  }}\r\n                >\r\n                  Try Alternate Options\r\n                </p>\r\n              </div>\r\n            </>\r\n          )}\r\n        </Modal.Footer>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddScreenModal;\r\n","D:\\project\\trendy\\src\\jsx\\modals\\UploadMediaFileModal.jsx",[],"D:\\project\\trendy\\src\\jsx\\modals\\FilterModal.jsx",["236","237","238","239"],"import { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\r\nimport cancelIcon from \"../../img/cancel-icon.png\";\r\nimport tagCloseIcon from \"../../img/tag-close-icon.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FilterModal = ({ showFilterModal, setFilterModal }) => {\r\n  return (\r\n    <Modal\r\n      className=\"fade bd-example-modal-lg mt-4 custom-modal custom-modal-medium\"\r\n      show={showFilterModal}\r\n      size=\"md\"\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title className=\"mr-auto\">Filter</Modal.Title>\r\n        <span className=\"clear-filter-link\">Clear Filter</span>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={() => setFilterModal(false)}\r\n        >\r\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\r\n        </Button>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"filter-row mb-3\">\r\n          <h6>Show</h6>\r\n          <div className=\"d-flex flex-wrap\">\r\n            <div className=\"custom-control custom-checkbox common-checkbox mr-3\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"custom-control-input\"\r\n                id=\"Landscape\"\r\n                required\r\n              />\r\n              <label className=\"custom-control-label\" htmlFor=\"Landscape\">\r\n                Landscape\r\n              </label>\r\n            </div>\r\n            <div className=\"custom-control custom-checkbox common-checkbox mr-3\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"custom-control-input\"\r\n                id=\"Landscape1\"\r\n                required\r\n              />\r\n              <label className=\"custom-control-label\" htmlFor=\"Landscape1\">\r\n                Landscape\r\n              </label>\r\n            </div>\r\n            <div className=\"custom-control custom-checkbox common-checkbox mr-3\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"custom-control-input\"\r\n                id=\"Landscape2\"\r\n                required\r\n              />\r\n              <label className=\"custom-control-label\" htmlFor=\"Landscape2\">\r\n                Landscape\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"filter-row mb-3\">\r\n          <h6>Tags</h6>\r\n          <div className=\"d-flex flex-wrap\">\r\n            <Badge className=\"badge-common-light mr-2\" variant=\"outline-light\">\r\n              Test Devices\r\n            </Badge>\r\n            <Badge className=\"badge-common-light mr-2\" variant=\"outline-light\">\r\n              Test Devices\r\n            </Badge>\r\n            <Badge className=\"badge-common-light mr-2\" variant=\"outline-light\">\r\n              Test Devices\r\n            </Badge>\r\n          </div>\r\n        </div>\r\n        <div className=\"filter-row mb-3\">\r\n          <h6>Groups</h6>\r\n          <div className=\"d-flex flex-wrap\">\r\n            <Badge className=\"badge-common-light mr-2\" variant=\"outline-light\">\r\n              Test Devices\r\n            </Badge>\r\n          </div>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          variant=\"\"\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-block primary-btn\"\r\n          onClick={() => setFilterModal(false)}\r\n        >\r\n          Apply\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default FilterModal;\r\n","D:\\project\\trendy\\src\\jsx\\layouts\\nav\\Logout.js",[],"D:\\project\\trendy\\src\\jsx\\components\\chatBox\\Alerts.js",[],"D:\\project\\trendy\\src\\jsx\\components\\chatBox\\Notes.js",[],"D:\\project\\trendy\\src\\jsx\\components\\chatBox\\Chat.js",[],"D:\\project\\trendy\\src\\utils\\fetchClient.js",[],"D:\\project\\trendy\\src\\jsx\\components\\screen\\listScreens.jsx",[],"D:\\project\\trendy\\src\\jsx\\components\\media\\listMedia.jsx",["240"],"import React, { useEffect, useState } from \"react\";\r\nimport { Table, Dropdown } from \"react-bootstrap\";\r\nimport AddNewTagModal from \"../../modals/AddNewTagModal\";\r\nimport downArrow from \"../../../img/down-arrow.png\";\r\nimport menuIcon from \"../../../img/menu-icon.png\";\r\nimport defaultComparisonIcon from \"../../../img/default-comparison-icon.png\";\r\nimport emptyMediaImg from \"../../../img/addmedia-empty-img.png\";\r\nimport nameAvatar from \"../../../img/assets-avatar-img.png\";\r\nimport deleteIcon from \"../../../img/delete-icon.png\";\r\nimport {\r\n  getDatetimeIn12Hours,\r\n  humanReadableFormattedDateString,\r\n} from \"../../../utils/UtilsService\";\r\nimport DeleteConfirmation from \"../../modals/DeleteConfirmation\";\r\nimport { deleteMedia } from \"../../../utils/api\";\r\nimport PublishMediaModal from \"../../modals/PublishMediaModal\";\r\n\r\nconst ListMedia = ({ allMedia,callAllMediaApi }) => {\r\n  const [showNewTagModal, setNewTagModal] = useState(false);\r\n  const [deleteModal, setDeleteModal] = useState(false);\r\n  const [selectedMedia, setSelectedMedia] = useState(\"\");\r\n  const [showPublishPopUp, setShowPublishPopUp] = useState(false);\r\n  \r\n  // use effect\r\n\r\n\r\n  const handleDelete = async () => {\r\n    setDeleteModal(false)\r\n    await deleteMedia(selectedMedia._id)\r\n    callAllMediaApi()\r\n   };\r\n\r\n   const handlePublishcOpen = (media)=>{\r\n    setShowPublishPopUp(media);\r\n   }\r\n  return (\r\n    <>\r\n      {allMedia !== \"\" ? (\r\n        <Table responsive className=\"custom-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Type</th>\r\n              <th>Uploaded Date</th>\r\n              <th>Properties</th>\r\n              <th>Tags</th>\r\n              <th>More</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {allMedia.map((media) => {\r\n              return (\r\n                <tr>\r\n                  <td>\r\n                    <span className=\"td-content d-flex name-td-content\">\r\n                      <span className=\"name-img mr-2\">\r\n                        <img\r\n                          className=\"media-img img-fluid\"\r\n                          src={nameAvatar}\r\n                          alt=\"media-img\"\r\n                        />\r\n                      </span>\r\n                      <span className=\"name-content d-flex flex-column flex-grow-1\">\r\n                        <strong>{media.title}</strong>\r\n                        <span>Added by Gauri Batra</span>\r\n                      </span>\r\n                    </span>\r\n                  </td>\r\n                  <td>{media.type}</td>\r\n                  <td>\r\n                    <span className=\"td-content\">\r\n                      <strong>\r\n                        {humanReadableFormattedDateString(media.uploadDate)}\r\n                      </strong>\r\n                      <span>{getDatetimeIn12Hours(media.uploadDate)}</span>\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <span className=\"td-content\">\r\n                      <strong>{media.properties.split(\",\")[1]}</strong>\r\n                      <span>{media.properties.split(\",\")[0]}</span>\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    {media.tags.map((tag) => {\r\n                      return <span className=\"my-phone-tag text-truncate ml-1\">{tag}</span>;\r\n                    })}\r\n                    <span\r\n                      className=\"down-arrow\"\r\n                      onClick={() => {\r\n                        setSelectedMedia(media)\r\n                        setNewTagModal(true);\r\n                      }}\r\n                    >\r\n                      <img\r\n                        className=\"down-arrow-img img-fluid\"\r\n                        src={downArrow}\r\n                        alt=\"arrow\"\r\n                      />\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <Dropdown className=\"dropdown-toggle-menu\">\r\n                      <Dropdown.Toggle variant=\"\" className=\"p-0  mb-2\">\r\n                        <span className=\"table-menu-icon\">\r\n                          <img\r\n                            className=\"menu-img img-fluid\"\r\n                            src={menuIcon}\r\n                            alt=\"menu-icon\"\r\n                          />\r\n                        </span>\r\n                      </Dropdown.Toggle>\r\n                      <Dropdown.Menu>\r\n                        <Dropdown.Item href=\"#\" className=\"dropdown-list-item\">\r\n                          <div className=\"d-flex\">\r\n                            <div className=\"dropdown-list-icon\">\r\n                              <img\r\n                                className=\"dropdown-list-img img-fluid\"\r\n                                src={defaultComparisonIcon}\r\n                                alt=\"menu-icon\"\r\n                              />\r\n                            </div>\r\n                            <div className=\"dropdown-menu-list\">\r\n                              <span className=\"menu-heading\" onClick={()=>{\r\n                                handlePublishcOpen(media)\r\n                              }}>\r\n                                Publish on Screen\r\n                              </span>\r\n                              <span className=\"menu-description\">\r\n                                Get to know more about screen info\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item href=\"#\" className=\"dropdown-list-item\" onClick={()=>{\r\n                              setSelectedMedia(media)\r\n                              setDeleteModal(true)\r\n                            }}>\r\n                          <div className=\"d-flex\">\r\n                            <div className=\"dropdown-list-icon\" >\r\n                              <img\r\n                                className=\"dropdown-list-img img-fluid\"\r\n                                src={deleteIcon}\r\n                                alt=\"menu-icon\"\r\n                              />\r\n                            </div>\r\n                            <div className=\"dropdown-menu-list\">\r\n                              <span className=\"menu-heading\">Delete</span>\r\n                              <span className=\"menu-description\">\r\n                                Get to know more about screen info\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </Dropdown.Item>\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <div className=\"empty-media text-center\">\r\n          <div class=\"empty-media-img mx-auto\">\r\n            <img\r\n              className=\"media-img img-fluid\"\r\n              src={emptyMediaImg}\r\n              alt=\"media-img\"\r\n            />\r\n          </div>\r\n          <h3>Add Media</h3>\r\n          <p>\r\n            Upload your favourite images and videos from the local storage\r\n            <br /> of your device\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {showNewTagModal && (\r\n        <AddNewTagModal\r\n          selected={selectedMedia}\r\n          setNewTagModal={setNewTagModal}\r\n          \r\n        />\r\n      )}\r\n      {showPublishPopUp && (\r\n        <PublishMediaModal\r\n          selected={showPublishPopUp}\r\n          setShowPublishPopUp={setShowPublishPopUp}\r\n        />\r\n      )}\r\n      {deleteModal && <DeleteConfirmation setDeleteModal={setDeleteModal} callbackFunction={handleDelete}/>}\r\n    </>\r\n  );\r\n};\r\nexport default ListMedia;\r\n","D:\\project\\trendy\\src\\jsx\\components\\media\\fileUploadWithPreview.jsx",[],"D:\\project\\trendy\\src\\jsx\\components\\screen\\tagInputField.jsx",[],"D:\\project\\trendy\\src\\jsx\\components\\chatBox\\MsgBox.js",[],"D:\\project\\trendy\\src\\utils\\UtilsService.js",["241","242","243","244"],"export const isValidDate = (d) => {\r\n    return d instanceof Date && !isNaN(d);\r\n}\r\n\r\nexport const formattedDateString = (d) => {\r\n    d = new Date(d);\r\n    const yyyy = d.getFullYear();\r\n    const mm = dateDigits(d.getMonth() + 1);\r\n    const dd = dateDigits(d.getDate());\r\n    return yyyy + \"-\" + mm + \"-\" + dd;\r\n};\r\n\r\nexport const humanReadableFormattedDateString = (date) => {\r\n    date = new Date(date);\r\n    let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    let day = dateDigits(date.getDate());\r\n    let month = months[date.getMonth()];\r\n    let year = date.getFullYear();\r\n    return day + ' ' + month + ', ' + year;\r\n}\r\n\r\nexport const formattedTimeString = (d) => {\r\n    d = new Date(d);\r\n    return dateDigits(d.getHours()) + \":\" + dateDigits(d.getMinutes()) + \":00\";\r\n};\r\n\r\nexport const getHOrMFromLocalTimeString = (localTimeString, hOrM = 'h') => {\r\n    const localTimeArr = localTimeString.split(':');\r\n    if (localTimeArr.length > 1) {\r\n        if (hOrM === 'h') {\r\n            return +localTimeString.split(':')[0];\r\n        } else {\r\n            return +localTimeString.split(':')[1];\r\n        }\r\n    } else {\r\n        return 0;\r\n    }\r\n};\r\n\r\nexport const dateDigits = (v, digits = 2) => {\r\n    let str = \"\";\r\n    for (let i = digits; i > 1; i--) {\r\n        str += \"0\";\r\n    }\r\n\r\n    return (str + v).slice(-digits);\r\n};\r\n\r\nexport const currencyFormat = (num, toFixed = 2) => {\r\n    num = num ? +num : 0;\r\n    return '$' + num.toFixed(toFixed).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n}\r\n\r\nexport const numberThFormat = (num) => {\r\n    switch(num) {\r\n        case 1: \r\n            return num + 'st';\r\n        break;\r\n        case 2: \r\n            return num + 'nd';\r\n        break;\r\n        case 3: \r\n            return num + 'rd';\r\n        break;\r\n        default: \r\n            return num + 'th';\r\n        break;\r\n    }\r\n}\r\n\r\nexport const priceValue = (formattedPrice = \"$0.00\") => {\r\n    formattedPrice = formattedPrice ? formattedPrice + \"\" : \"$0.00\";\r\n    return +formattedPrice.split(\",\").join(\"\").split(\" \").join(\"\").split(\"$\").join(\"\")\r\n};\r\n\r\nexport const isMobile = () => {\r\n    return window.innerWidth < 768;\r\n};\r\n\r\nexport const randomStr = (length) => {\r\n    var result = '';\r\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r\n    var charactersLength = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport const defaultPeriods = [\r\n    {\r\n        dayOfWeek: \"SUN\",\r\n        startLocalTime: \"7:00:00\",\r\n        endLocalTime: \"20:00:00\",\r\n        closed: false\r\n    },\r\n    {\r\n        dayOfWeek: \"MON\",\r\n        startLocalTime: \"7:00:00\",\r\n        endLocalTime: \"20:00:00\",\r\n        closed: false\r\n    },\r\n    {\r\n        dayOfWeek: \"TUE\",\r\n        startLocalTime: \"7:00:00\",\r\n        endLocalTime: \"20:00:00\",\r\n        closed: false\r\n    },\r\n    {\r\n        dayOfWeek: \"WED\",\r\n        startLocalTime: \"7:00:00\",\r\n        endLocalTime: \"20:00:00\",\r\n        closed: false\r\n    },\r\n    {\r\n        dayOfWeek: \"THU\",\r\n        startLocalTime: \"7:00:00\",\r\n        endLocalTime: \"20:00:00\",\r\n        closed: false\r\n    },\r\n    {\r\n        dayOfWeek: \"FRI\",\r\n        startLocalTime: \"7:00:00\",\r\n        endLocalTime: \"20:00:00\",\r\n        closed: false\r\n    },\r\n    {\r\n        dayOfWeek: \"SAT\",\r\n        startLocalTime: \"7:00:00\",\r\n        endLocalTime: \"20:00:00\",\r\n        closed: false\r\n    }\r\n];\r\n\r\nexport const getDatetimeIn12Hours = (datetimeString) =>{\r\n    const date = new Date(datetimeString);\r\n    const options = { hour: 'numeric', minute: 'numeric', hour12: true };\r\n    return  date.toLocaleTimeString('en-US', options);\r\n}","D:\\project\\trendy\\src\\jsx\\modals\\DeleteConfirmation.jsx",["245","246","247","248","249"],"import { Button, Modal, Row, Col, Badge } from \"react-bootstrap\";\r\nimport cancelIcon from \"../../img/cancel-icon.png\";\r\nimport tagCloseIcon from \"../../img/tag-close-icon.png\";\r\n\r\nconst DeleteConfirmation = ({ setDeleteModal, callbackFunction }) => {\r\n  return (\r\n    <Modal className=\"fade\" show={true}>\r\n    <Modal.Header>\r\n       <Modal.Title>Confirmation</Modal.Title>\r\n       <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={() => setDeleteModal(false)}\r\n       >\r\n          <span>&times;</span>\r\n       </Button>\r\n    </Modal.Header>\r\n    <Modal.Body>Are you sure you want to delete?</Modal.Body>\r\n    <Modal.Footer>\r\n       <Button\r\n          onClick={() => setDeleteModal(false)}\r\n          variant=\"light\"\r\n       >\r\n          Close\r\n       </Button>\r\n       <Button variant=\"danger\" onClick={callbackFunction}>Yes Delete</Button>\r\n    </Modal.Footer>\r\n </Modal>\r\n  );\r\n};\r\n\r\nexport default DeleteConfirmation;\r\n","D:\\project\\trendy\\src\\jsx\\modals\\AddNewTagModal.jsx",[],"D:\\project\\trendy\\src\\jsx\\modals\\PublishMediaModal.jsx",["250"],"import { Button, Modal, Row, Col, Badge, Table } from \"react-bootstrap\";\r\nimport cancelIcon from \"../../img/cancel-icon.png\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getAllScreens, publishMedia } from \"../../utils/api\";\r\n// import tagCloseIcon from \"../../img/tag-close-icon.png\";\r\n\r\nconst PublishMediaModal = ({ setShowPublishPopUp, selected }) => {\r\n  const [allScreens, setAllScreens] = useState(\"\");\r\n  const [checkedItems, setCheckedItems] = useState({});\r\n  const [checkedValues, setCheckedValues] = useState([]);\r\n  // use effect\r\n  useEffect(() => {\r\n    callAllScreenApi();\r\n  }, []);\r\n\r\n  const callAllScreenApi = async () => {\r\n    const list = await getAllScreens();\r\n    setAllScreens(list);\r\n  };\r\n \r\n\r\n  const handleCheckboxChange = (event) => {\r\n    const newCheckedItems = { ...checkedItems, [event.target.name]: event.target.checked }\r\n    const selectedScreens = []\r\n    for (const key in newCheckedItems) {\r\n      if (newCheckedItems[key] === true) {\r\n        selectedScreens.push(key);\r\n      }\r\n    }\r\n    setCheckedValues(selectedScreens)\r\n    setCheckedItems(newCheckedItems);\r\n  };\r\n\r\n  const handleSelectAllChange = (event) => {\r\n    const newCheckedItems = {};\r\n    allScreens.forEach((item) => {\r\n      newCheckedItems[item._id] = event.target.checked;\r\n    });\r\n   const selectedScreens = []\r\n    for (const key in newCheckedItems) {\r\n      if (newCheckedItems[key] === true) {\r\n        selectedScreens.push(key);\r\n      }\r\n    }\r\n    setCheckedValues(selectedScreens)\r\n    setCheckedItems(newCheckedItems);\r\n  };\r\n\r\nconst handleSubmit = ()=>{\r\n  publishMedia( {\r\n    mediaId: selected._id,\r\n    screenIds: checkedValues,\r\n    duration: 5,\r\n  })\r\n\r\n  // setShowPublishPopUp(false)\r\n}\r\n  return (\r\n    <Modal\r\n      className=\"fade bd-example-modal-lg mt-4 custom-modal custom-modal-large\"\r\n      show={true}\r\n      size=\"md\"\r\n    >\r\n      <Modal.Header>\r\n        <Modal.Title>Add New Tag</Modal.Title>\r\n        <Button\r\n          variant=\"\"\r\n          className=\"close\"\r\n          onClick={() => setShowPublishPopUp(false)}\r\n        >\r\n          <img className=\"cancel-icon\" src={cancelIcon} alt=\"cancel-icon\" />\r\n        </Button>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Table responsive>\r\n          <thead>\r\n            <tr>\r\n              <th className=\"width50\">\r\n                <div className=\"custom-control custom-checkbox checkbox-success check-lg mr-3\">\r\n                \r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"custom-control-input\"\r\n                    id=\"checkbox1_exam_all\"\r\n                    onChange={handleSelectAllChange}\r\n                    required=\"\"\r\n                  />\r\n                  <label\r\n                    className=\"custom-control-label\"\r\n                    htmlFor=\"checkbox1_exam_all\"\r\n                  ></label>\r\n                </div>\r\n              </th>\r\n              <th>Screen</th>\r\n              <th>Last Seen</th>\r\n              <th>Default Composition</th>\r\n              <th>Current Schedule</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {allScreens !== \"\" &&\r\n              allScreens.map((screen) => {\r\n                return (\r\n                  <tr>\r\n                    <td>\r\n                      <div className=\"custom-control custom-checkbox checkbox-success check-lg mr-3\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          className=\"custom-control-input\"\r\n                          id={screen._id}\r\n                          name={screen._id}\r\n                          checked={checkedItems[screen._id]}\r\n                          onChange={handleCheckboxChange}\r\n                        />\r\n                        <label\r\n                          className=\"custom-control-label\"\r\n                          htmlFor={screen._id}\r\n                        ></label>\r\n                      </div>\r\n                    </td>\r\n\r\n                    <td>\r\n                      <span className=\"td-content\">\r\n                        <strong>{screen.name}</strong>\r\n                        <span>{screen.screenLocation}</span>\r\n                      </span>\r\n                    </td>\r\n                    <td>\r\n                      <span className=\"d-flex align-items-center\">\r\n                        <span className=\"status status-green\"></span>\r\n                        <span className=\"td-content\">\r\n                          <strong>{screen.name}</strong>\r\n                          <span>{screen.screenLocation}</span>\r\n                        </span>\r\n                      </span>\r\n                    </td>\r\n                    <td>Default Compo. </td>\r\n                    <td>No Schedule</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </Table>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Row className=\"w-100 m-0\">\r\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-0 pr-2\">\r\n            <Button className=\"cancel-btn w-100\" variant=\"outline-light\">\r\n              Cancel\r\n            </Button>\r\n          </Col>\r\n          <Col lg={6} md={6} sm={6} xs={6} className=\"pl-2 pr-0\">\r\n            <Button\r\n            disabled={checkedValues.length === 0}\r\n              variant=\"\"\r\n              type=\"button\"\r\n              className=\"btn btn-primary btn-block primary-btn\"\r\n              onClick={handleSubmit}\r\n            >\r\n              Publish\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default PublishMediaModal;\r\n",{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"256","line":6,"column":10,"nodeType":"257","messageId":"258","endLine":6,"endColumn":13},{"ruleId":"255","severity":1,"message":"259","line":6,"column":15,"nodeType":"257","messageId":"258","endLine":6,"endColumn":18},{"ruleId":"255","severity":1,"message":"260","line":6,"column":20,"nodeType":"257","messageId":"258","endLine":6,"endColumn":24},{"ruleId":"255","severity":1,"message":"261","line":55,"column":9,"nodeType":"257","messageId":"258","endLine":55,"endColumn":17},{"ruleId":"255","severity":1,"message":"261","line":66,"column":9,"nodeType":"257","messageId":"258","endLine":66,"endColumn":17},{"ruleId":"255","severity":1,"message":"262","line":10,"column":10,"nodeType":"257","messageId":"258","endLine":10,"endColumn":21},{"ruleId":"255","severity":1,"message":"263","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":16},{"ruleId":"255","severity":1,"message":"259","line":2,"column":18,"nodeType":"257","messageId":"258","endLine":2,"endColumn":21},{"ruleId":"255","severity":1,"message":"264","line":4,"column":8,"nodeType":"257","messageId":"258","endLine":4,"endColumn":22},{"ruleId":"255","severity":1,"message":"265","line":5,"column":8,"nodeType":"257","messageId":"258","endLine":5,"endColumn":19},{"ruleId":"255","severity":1,"message":"266","line":6,"column":8,"nodeType":"257","messageId":"258","endLine":6,"endColumn":24},{"ruleId":"255","severity":1,"message":"267","line":7,"column":8,"nodeType":"257","messageId":"258","endLine":7,"endColumn":14},{"ruleId":"255","severity":1,"message":"268","line":8,"column":8,"nodeType":"257","messageId":"258","endLine":8,"endColumn":18},{"ruleId":"255","severity":1,"message":"269","line":9,"column":8,"nodeType":"257","messageId":"258","endLine":9,"endColumn":16},{"ruleId":"255","severity":1,"message":"270","line":10,"column":8,"nodeType":"257","messageId":"258","endLine":10,"endColumn":18},{"ruleId":"255","severity":1,"message":"271","line":11,"column":8,"nodeType":"257","messageId":"258","endLine":11,"endColumn":17},{"ruleId":"255","severity":1,"message":"272","line":14,"column":10,"nodeType":"257","messageId":"258","endLine":14,"endColumn":25},{"ruleId":"255","severity":1,"message":"273","line":14,"column":27,"nodeType":"257","messageId":"258","endLine":14,"endColumn":45},{"ruleId":"255","severity":1,"message":"274","line":15,"column":10,"nodeType":"257","messageId":"258","endLine":15,"endColumn":25},{"ruleId":"255","severity":1,"message":"275","line":15,"column":27,"nodeType":"257","messageId":"258","endLine":15,"endColumn":41},{"ruleId":"255","severity":1,"message":"276","line":16,"column":10,"nodeType":"257","messageId":"258","endLine":16,"endColumn":30},{"ruleId":"255","severity":1,"message":"277","line":16,"column":32,"nodeType":"257","messageId":"258","endLine":16,"endColumn":51},{"ruleId":"278","severity":1,"message":"279","line":21,"column":6,"nodeType":"280","endLine":21,"endColumn":8,"suggestions":"281"},{"ruleId":"255","severity":1,"message":"282","line":5,"column":8,"nodeType":"257","messageId":"258","endLine":5,"endColumn":24},{"ruleId":"255","severity":1,"message":"283","line":9,"column":8,"nodeType":"257","messageId":"258","endLine":9,"endColumn":14},{"ruleId":"255","severity":1,"message":"284","line":14,"column":9,"nodeType":"257","messageId":"258","endLine":14,"endColumn":21},{"ruleId":"255","severity":1,"message":"256","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":13},{"ruleId":"255","severity":1,"message":"260","line":2,"column":20,"nodeType":"257","messageId":"258","endLine":2,"endColumn":24},{"ruleId":"255","severity":1,"message":"263","line":2,"column":26,"nodeType":"257","messageId":"258","endLine":2,"endColumn":32},{"ruleId":"255","severity":1,"message":"285","line":4,"column":10,"nodeType":"257","messageId":"258","endLine":4,"endColumn":14},{"ruleId":"255","severity":1,"message":"286","line":8,"column":10,"nodeType":"257","messageId":"258","endLine":8,"endColumn":25},{"ruleId":"255","severity":1,"message":"287","line":8,"column":27,"nodeType":"257","messageId":"258","endLine":8,"endColumn":41},{"ruleId":"255","severity":1,"message":"288","line":17,"column":9,"nodeType":"257","messageId":"258","endLine":17,"endColumn":20},{"ruleId":"255","severity":1,"message":"289","line":5,"column":8,"nodeType":"257","messageId":"258","endLine":5,"endColumn":16},{"ruleId":"255","severity":1,"message":"256","line":1,"column":25,"nodeType":"257","messageId":"258","endLine":1,"endColumn":28},{"ruleId":"255","severity":1,"message":"259","line":1,"column":30,"nodeType":"257","messageId":"258","endLine":1,"endColumn":33},{"ruleId":"255","severity":1,"message":"290","line":3,"column":8,"nodeType":"257","messageId":"258","endLine":3,"endColumn":20},{"ruleId":"255","severity":1,"message":"285","line":4,"column":10,"nodeType":"257","messageId":"258","endLine":4,"endColumn":14},{"ruleId":"255","severity":1,"message":"291","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":26},{"ruleId":"292","severity":1,"message":"293","line":58,"column":9,"nodeType":"294","messageId":"295","endLine":58,"endColumn":15},{"ruleId":"292","severity":1,"message":"293","line":61,"column":9,"nodeType":"294","messageId":"295","endLine":61,"endColumn":15},{"ruleId":"292","severity":1,"message":"293","line":64,"column":9,"nodeType":"294","messageId":"295","endLine":64,"endColumn":15},{"ruleId":"292","severity":1,"message":"293","line":67,"column":9,"nodeType":"294","messageId":"295","endLine":67,"endColumn":15},{"ruleId":"255","severity":1,"message":"256","line":1,"column":25,"nodeType":"257","messageId":"258","endLine":1,"endColumn":28},{"ruleId":"255","severity":1,"message":"259","line":1,"column":30,"nodeType":"257","messageId":"258","endLine":1,"endColumn":33},{"ruleId":"255","severity":1,"message":"296","line":1,"column":35,"nodeType":"257","messageId":"258","endLine":1,"endColumn":40},{"ruleId":"255","severity":1,"message":"297","line":2,"column":8,"nodeType":"257","messageId":"258","endLine":2,"endColumn":18},{"ruleId":"255","severity":1,"message":"290","line":3,"column":8,"nodeType":"257","messageId":"258","endLine":3,"endColumn":20},{"ruleId":"255","severity":1,"message":"296","line":1,"column":35,"nodeType":"257","messageId":"258","endLine":1,"endColumn":40},"no-native-reassign",["298"],"no-negated-in-lhs",["299"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Card' is defined but never used.","'response' is assigned a value but never used.","'deleteMedia' is defined but never used.","'Button' is defined but never used.","'AddScreenModal' is defined but never used.","'FilterModal' is defined but never used.","'UploadMediaModal' is defined but never used.","'addImg' is defined but never used.","'searchIcon' is defined but never used.","'listIcon' is defined but never used.","'uploadIcon' is defined but never used.","'canvaIcon' is defined but never used.","'showScreenModal' is assigned a value but never used.","'setShowScreenModal' is assigned a value but never used.","'showFilterModal' is assigned a value but never used.","'setFilterModal' is assigned a value but never used.","'showUploadMediaModal' is assigned a value but never used.","'setUploadMediaModal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getScreenCode'. Either include it or remove the dependency array.","ArrayExpression",["300"],"'PerfectScrollbar' is defined but never used.","'avatar' is defined but never used.","'onFullScreen' is assigned a value but never used.","'Link' is defined but never used.","'showNewTagModal' is assigned a value but never used.","'setNewTagModal' is assigned a value but never used.","'chackboxFun' is assigned a value but never used.","'DeviceBG' is defined but never used.","'tagCloseIcon' is defined but never used.","'useEffect' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'Badge' is defined but never used.","'cancelIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"301","fix":"302"},"Update the dependencies array to be: [getScreenCode]",{"range":"303","text":"304"},[768,770],"[getScreenCode]"]